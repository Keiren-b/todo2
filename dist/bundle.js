(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),i=n.n(o),a=n(645),r=n.n(a)()(i());r.push([e.id,".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n.sidebarSelect{\n    background-color: cornsilk;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,4BAA4B;AAChC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,qCAAqC;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,OAAO;IACP,MAAM;IACN,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,gBAAgB;IAC9B,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,iCAAiC,EAAE,qBAAqB;AAC5D;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:[".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n.sidebarSelect{\n    background-color: cornsilk;\n}"],sourceRoot:""}]);const d=r},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(r[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&r[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(i," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},r=[],d=0;d<e.length;d++){var c=e[d],l=o.base?c[0]+o.base:c[0],s=a[l]||0,u="".concat(l," ").concat(s);a[l]=s+1;var p=n(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=i(m,o);o.byIndex=d,t.splice(d,0,{identifier:u,updater:A,references:1})}r.push(u)}return r}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var a=o(e=e||[],i=i||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var d=n(a[r]);t[d].references--}for(var c=o(e,i),l=0;l<a.length;l++){var s=n(a[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e={name:""},t=function(){return e.name},o=()=>{const t=document.getElementById("sidebar");for(;t.childElementCount>1;)t.removeChild(t.lastChild);for(let n=0;n<=localStorage.length;n++){const o=localStorage.key(n),i=document.createElement("div"),a=document.getElementById("inputContainer");i.setAttribute("id","bar"),i.textContent=o,t.appendChild(i),i.addEventListener("click",(()=>{e.name=event.target.textContent,console.log(e.name),a.classList.remove("hidden")}))}};function i(e,t,n,o,i){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.notes=i}const a=function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.childElementCount;t++)"LABEL"!==e.children[t].nodeName&&(e.children[t].value="");e.classList.add("hidden")};var r=n(379),d=n.n(r),c=n(795),l=n.n(c),s=n(569),u=n.n(s),p=n(565),m=n.n(p),A=n(216),h=n.n(A),f=n(589),C=n.n(f),g=n(426),v={};v.styleTagTransform=C(),v.setAttributes=m(),v.insert=u().bind(null,"head"),v.domAPI=l(),v.insertStyleElement=h(),d()(g.Z,v),g.Z&&g.Z.locals&&g.Z.locals,function(){const n=document.getElementById("content"),r=document.createElement("div");r.textContent="This is my header",r.setAttribute("id","header"),n.appendChild(r),r.classList.add("container");const d=document.createElement("div");d.setAttribute("id","taskContainer"),d.style.backgroundColor="grey",n.appendChild(d);const c=document.createElement("div");c.setAttribute("id","sidebar"),c.textContent="This is my sidebar",d.appendChild(c);const l=document.createElement("div");l.setAttribute("id","projectMenu"),c.appendChild(l);const s=document.createElement("button");s.textContent="Add New Project",s.setAttribute("id","newProjectBtn"),l.appendChild(s);const u=document.createElement("button");u.textContent="Add New Task",u.setAttribute("id","newTaskBtn"),l.appendChild(u),u.classList.add("hidden"),u.addEventListener("click",(()=>{document.getElementById("inputContainer").classList.remove("hidden")}));const p=document.createElement("div");p.setAttribute("id","taskDisplay"),p.textContent="This is my task display",d.appendChild(p);const m=document.createElement("button");m.textContent="CLEAR",m.addEventListener("click",(()=>localStorage.clear()));const A=document.createElement("button");A.textContent="ppp";const h=document.createElement("div");n.appendChild(h),h.appendChild(m),h.appendChild(A),(()=>{const e=document.getElementById("taskDisplay"),n=document.createElement("div");n.setAttribute("id","inputContainer"),n.classList.add("hidden");const o=document.createElement("input");o.name="Title",o.setAttribute("id","title");const r=document.createElement("Label");r.setAttribute("for",o),r.innerHTML="Title: ",n.appendChild(r),n.appendChild(o);const d=document.createElement("textarea");d.name="Description",d.setAttribute("id","desc");const c=document.createElement("Label");c.setAttribute("for",d),c.innerHTML="Description: ",n.appendChild(c),n.appendChild(d);const l=document.createElement("input");l.type="date",l.name="Due",l.setAttribute("id","due");const s=document.createElement("Label");s.setAttribute("for",l),s.innerHTML="Due Date: ",n.appendChild(s),n.appendChild(l);const u=document.createElement("select");u.name="Priority",u.setAttribute("id","priority");let p=["Low","Medium","High","Ugent"];for(const e of p){var m=document.createElement("option");m.value=e,m.text=e.charAt(0).toUpperCase()+e.slice(1),u.appendChild(m)}const A=document.createElement("Label");A.setAttribute("for",u),A.innerHTML="Priority: ",n.appendChild(A),n.appendChild(u);const h=document.createElement("textarea");h.name="Notes",h.setAttribute("id","notes");const f=document.createElement("Label");f.setAttribute("for",u),f.innerHTML="Notes: ",n.appendChild(f),n.appendChild(h);const C=document.createElement("button");C.textContent="Add To-Do",C.setAttribute("id","printBtn"),n.appendChild(C),C.addEventListener("click",(()=>{(function(e){let n=t();if(null==localStorage.getItem(e.title))if(""==localStorage.getItem(n)){let t={[e.title]:e};localStorage.setItem(n,JSON.stringify(t)),console.log(localStorage)}else{let t=JSON.parse(localStorage.getItem(n)),o={[e.title]:e};t=Object.assign(t,o),localStorage.setItem(n,JSON.stringify(t))}else alert("This Task Already Exists. Choose another name")})(new i(document.getElementById("title").value,document.getElementById("desc").value,document.getElementById("due").value,document.getElementById("priority").value,document.getElementById("notes").value)),a()})),e.appendChild(n),function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.children.length;t++)t%2!=0&&(5==t&&(e.children[t].value="2001-01-01"),e.children[t].value=7==t?"High":"test Value")}()})(),o(),function(){const t=document.getElementById("content"),n=document.createElement("div");n.setAttribute("id","projectModal"),n.classList.add("projectModal"),n.classList.add("hidden"),t.appendChild(n);const i=document.createElement("div");i.setAttribute("id","modalHeader"),i.textContent="Add New Project",n.appendChild(i);const a=document.createElement("div");a.setAttribute("id","modalInputContainer"),n.appendChild(a);const r=document.createElement("input");r.name="Title",r.setAttribute("id","projectTitle");const d=document.createElement("Label");d.setAttribute("for",r),d.innerHTML="Title: ",a.appendChild(d),a.appendChild(r);const c=document.createElement("button");c.setAttribute("id","cancelBtn"),c.textContent="Cancel",a.appendChild(c);const l=document.createElement("button");l.setAttribute("id","addBtn"),l.textContent="Add",l.addEventListener("click",(()=>{(function(){let t=document.getElementById("projectModal"),n=document.getElementById("projectTitle");if("addBtn"==event.currentTarget.getAttribute("id")){if(null!=localStorage.getItem(n.value))return void alert("This Project Already Exists. Choose another name");localStorage.setItem(n.value,""),e.name=n.value}t.classList.add("hidden"),inputContainer.classList.remove("hidden")})(),o()})),a.appendChild(l)}(),function(){const e=document.getElementById("projectModal"),t=document.getElementById("newTaskBtn"),n=document.getElementById("newProjectBtn"),o=document.getElementById("cancelBtn");n.onclick=function(){e.classList.remove("hidden"),t.classList.remove("hidden")},o.onclick=function(){e.classList.add("hidden")},window.onclick=function(t){t.target==e&&e.classList.add("hidden")}}()}(),localStorage.setItem("housework",JSON.stringify({washing:{title:"wash dishes",description:"wash the dishes",date:"2023-01-01",priority:"high",notes:"there are no notes"},cooking:{title:"cook dinner",description:"cook the dinner",date:"2023-02-01",priority:"low",notes:"there are some notes"},yard:{title:"cut grass",description:"cut the grass",date:"2023-02-01",priority:"med",notes:"there are so many notes notes"}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,".body {\n  background-color: whitesmoke;\n  font-family:'Trebuchet MS', sans-serif\n}\n\n.hidden {\n    display: none;\n}\n\n.container {\n    background-color: lightcoral;\n}\n\n#content {\n    background-color:  whitesmoke;\n}\n\n#header {\n    height: 10vh;\n    color: whitesmoke;\n    font-size: 5vh;\n    display: flex;\n    gap: 2vw;\n    background-color: rgb(135, 206, 250);\n    font-family: 'Trebuchet MS';\n}\n\n#header > div {\n    display: flex;\n    align-items: center;\n}\n\n #pencil {\n    /* height: 5vh;\n    width: auto; */\n    margin:8px;\n}\n\n#sidebar {\n    background-color: rgb(188, 220, 240);\n    font-family: 'Trebuchet MS';\n}\n\n#taskDisplay {\n    background-color:  whitesmoke;\n    font-family: 'Trebuchet MS';\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    background-color:  whitesmoke;\n}\n\n#taskContainer > div {\n    padding :10px\n}\n\n#bar {\n    margin: 8px\n}\n\n#bar:hover {\n    background-color: rgb(135, 206, 250);\n}\n\n#taskDisplay {\n    min-height: 100vh;\n    min-width: 80vw;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: row;\n}\n\n/* .highlight {\n    background-color: blueviolet;\n} */\n\n.projectModal {\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    vertical-align: middle;\n    /* background-color: rgb(0,0,0); /* Fallback color */\n    /* background-color: rgba(0,0,0,0.4); Black w/ opacity */ \n    background-color:ivory;\n    background-color:rgb(255, 255, 240, 0.8)\n}\n #modalInputContainer{\n     margin-top: 50px;\n }\n\n.sidebarSelect{\n    background-color: cornsilk;\n}\n\n#card {\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,4BAA4B;EAC5B;AACF;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,aAAa;IACb,QAAQ;IACR,oCAAoC;IACpC,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;CAEC;IACG;kBACc;IACd,UAAU;AACd;;AAEA;IACI,oCAAoC;IACpC,2BAA2B;AAC/B;;AAEA;IACI,6BAA6B;IAC7B,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,6BAA6B;AACjC;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;;GAEG;;AAEH;;IAEI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,qCAAqC;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,OAAO;IACP,MAAM;IACN,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,gBAAgB;IAC9B,cAAc,EAAE,4BAA4B;IAC5C,sBAAsB;IACtB,oDAAoD;IACpD,wDAAwD;IACxD,sBAAsB;IACtB;AACJ;CACC;KACI,gBAAgB;CACpB;;AAED;IACI,0BAA0B;AAC9B;;AAEA;;AAEA",sourcesContent:[".body {\n  background-color: whitesmoke;\n  font-family:'Trebuchet MS', sans-serif\n}\n\n.hidden {\n    display: none;\n}\n\n.container {\n    background-color: lightcoral;\n}\n\n#content {\n    background-color:  whitesmoke;\n}\n\n#header {\n    height: 10vh;\n    color: whitesmoke;\n    font-size: 5vh;\n    display: flex;\n    gap: 2vw;\n    background-color: rgb(135, 206, 250);\n    font-family: 'Trebuchet MS';\n}\n\n#header > div {\n    display: flex;\n    align-items: center;\n}\n\n #pencil {\n    /* height: 5vh;\n    width: auto; */\n    margin:8px;\n}\n\n#sidebar {\n    background-color: rgb(188, 220, 240);\n    font-family: 'Trebuchet MS';\n}\n\n#taskDisplay {\n    background-color:  whitesmoke;\n    font-family: 'Trebuchet MS';\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    background-color:  whitesmoke;\n}\n\n#taskContainer > div {\n    padding :10px\n}\n\n#bar {\n    margin: 8px\n}\n\n#bar:hover {\n    background-color: rgb(135, 206, 250);\n}\n\n#taskDisplay {\n    min-height: 100vh;\n    min-width: 80vw;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: row;\n}\n\n/* .highlight {\n    background-color: blueviolet;\n} */\n\n.projectModal {\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    vertical-align: middle;\n    /* background-color: rgb(0,0,0); /* Fallback color */\n    /* background-color: rgba(0,0,0,0.4); Black w/ opacity */ \n    background-color:ivory;\n    background-color:rgb(255, 255, 240, 0.8)\n}\n #modalInputContainer{\n     margin-top: 50px;\n }\n\n.sidebarSelect{\n    background-color: cornsilk;\n}\n\n#card {\n\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&a[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],c=0;c<e.length;c++){var d=e[c],l=o.base?d[0]+o.base:d[0],s=r[l]||0,u="".concat(l," ").concat(s);r[l]=s+1;var A=n(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)t[A].references++,t[A].updater(p);else{var m=i(p,o);o.byIndex=c,t.splice(c,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var c=n(r[a]);t[c].references--}for(var d=o(e,i),l=0;l<r.length;l++){var s=n(r[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}r=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&!e;)e=o[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{const e={name:""},t=function(){return e.name},o=()=>{const t=document.getElementById("projectList");for(;t.childElementCount>2;)t.removeChild(t.lastChild);for(let n=0;n<=localStorage.length;n++){const o=localStorage.key(n),i=document.createElement("div"),r=document.getElementById("inputContainer");i.setAttribute("id","bar"),i.textContent=o,t.appendChild(i),i.addEventListener("click",(()=>{e.name=event.target.textContent,u(),r.classList.remove("hidden")}))}};function i(e){return Array.from(e.parentNode.children).filter((function(t){return t!==e}))}const r=function(){let e=i(event.currentTarget.parentNode)[0].textContent,n=JSON.parse(localStorage.getItem(t()));delete n[e],localStorage.setItem(t(),JSON.stringify(n)),console.log(localStorage.getItem(t()))},a=function(){document.getElementById("editTaskBtn").classList.remove("hidden");let e=i(event.currentTarget.parentNode)[0].textContent,n=JSON.parse(localStorage.getItem(t()));inputContainer.classList.remove("hidden"),document.getElementById("title").value=n[e].title,document.getElementById("desc").value=n[e].description,document.getElementById("due").value=n[e].due,document.getElementById("priority").value=n[e].priority,document.getElementById("notes").value=n[e].notes,delete n[e],localStorage.setItem(t(),JSON.stringify(n))};function c(e,t,n,o,i){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.notes=i}const d=function(){return new c(document.getElementById("title").value,document.getElementById("desc").value,document.getElementById("due").value,document.getElementById("priority").value,document.getElementById("notes").value)};function l(e){let n=t();if(null==localStorage.getItem(e.title))if(""==localStorage.getItem(n)){let t={[e.title]:e};localStorage.setItem(n,JSON.stringify(t)),console.log(localStorage)}else{let t=JSON.parse(localStorage.getItem(n)),o={[e.title]:e};t=Object.assign(t,o),localStorage.setItem(n,JSON.stringify(t))}else alert("This Task Already Exists. Choose another name")}const s=function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.childElementCount;t++)"LABEL"!==e.children[t].nodeName&&(e.children[t].value="");e.classList.add("hidden")},u=function(){const e=document.getElementById("taskDisplay"),n=t();for(;e.childElementCount>1;)e.removeChild(e.lastChild);let o=localStorage.getItem(n);if(""!==o&&(o=JSON.parse(o)),""!==n)for(let t=0;t<Object.keys(o).length;t++){const n=document.createElement("div");n.setAttribute("id","card"),e.appendChild(n);const i=document.createElement("div");i.setAttribute("id","cardTitle"),i.textContent=Object.values(o)[t].title,n.appendChild(i);const c=document.createElement("div");c.setAttribute("id","cardDesc"),c.textContent=Object.values(o)[t].description,n.appendChild(c);const d=document.createElement("div");d.setAttribute("id","cardDue"),d.textContent=Object.values(o)[t].date,n.appendChild(d);const l=document.createElement("div");l.setAttribute("id","cardPriority"),l.textContent=Object.values(o)[t].priority,n.appendChild(l);const s=document.createElement("div");s.setAttribute("id","cardNotes"),s.textContent=Object.values(o)[t].notes,n.appendChild(s);const A=document.createElement("div");A.setAttribute("id","edits"),n.appendChild(A);const p=document.createElement("div");p.setAttribute("id","edit"),p.textContent="edit",A.appendChild(p),p.addEventListener("click",(()=>{a()}));const m=document.createElement("div");m.setAttribute("id","deleteTask"),m.textContent="X",A.appendChild(m),m.addEventListener("click",(()=>{r(),u()}))}};var A=n(379),p=n.n(A),m=n(795),h=n.n(m),C=n(569),g=n.n(C),f=n(565),b=n.n(f),v=n(216),y=n.n(v),E=n(589),I=n.n(E),B=n(426),k={};k.styleTagTransform=I(),k.setAttributes=b(),k.insert=g().bind(null,"head"),k.domAPI=h(),k.insertStyleElement=y(),p()(B.Z,k),B.Z&&B.Z.locals&&B.Z.locals;const x=n.p+"b0c1b178d2619e565968.png";!function(){const t=document.getElementById("content"),n=document.createElement("div"),i=document.createElement("div"),r=new Image;r.src=x,r.setAttribute("id","pencil"),n.appendChild(r),n.appendChild(i),i.textContent="To-Do",n.setAttribute("id","header"),t.appendChild(n),n.classList.add("container");const a=document.createElement("div");a.setAttribute("id","taskContainer"),t.appendChild(a);const c=document.createElement("div");c.setAttribute("id","sidebar"),a.appendChild(c);const A=document.createElement("div");A.setAttribute("id","projectList"),c.appendChild(A);const p=document.createElement("div");p.setAttribute("id","projectAddContainer"),c.appendChild(p);const m=document.createElement("button");p.appendChild(m),m.textContent="Add New Project",m.setAttribute("id","newProjectBtn");const h=document.createElement("button");h.textContent="Add New Task",h.setAttribute("id","newTaskBtn"),p.appendChild(h),h.classList.add("hidden"),h.addEventListener("click",(()=>{document.getElementById("inputContainer").classList.remove("hidden")}));const C=document.createElement("div");C.setAttribute("id","taskDisplay"),a.appendChild(C);const g=document.createElement("button");g.textContent="CLEAR",g.addEventListener("click",(()=>localStorage.clear()));const f=document.createElement("button");f.textContent="ppp";const b=document.createElement("div");t.appendChild(b),b.appendChild(g),b.appendChild(f),(()=>{const e=document.getElementById("taskDisplay"),t=document.createElement("div");t.setAttribute("id","inputContainer"),t.classList.add("hidden");const n=document.createElement("input");n.name="Title",n.setAttribute("id","title");const o=document.createElement("Label");o.setAttribute("for",n),o.innerHTML="Title: ",t.appendChild(o),t.appendChild(n);const i=document.createElement("textarea");i.name="Description",i.setAttribute("id","desc");const r=document.createElement("Label");r.setAttribute("for",i),r.innerHTML="Description: ",t.appendChild(r),t.appendChild(i);const a=document.createElement("input");a.type="date",a.name="Due",a.setAttribute("id","due");const c=document.createElement("Label");c.setAttribute("for",a),c.innerHTML="Due Date: ",t.appendChild(c),t.appendChild(a);const A=document.createElement("select");A.name="Priority",A.setAttribute("id","priority");let p=["Low","Medium","High","Ugent"];for(const e of p){var m=document.createElement("option");m.value=e,m.text=e.charAt(0).toUpperCase()+e.slice(1),A.appendChild(m)}const h=document.createElement("Label");h.setAttribute("for",A),h.innerHTML="Priority: ",t.appendChild(h),t.appendChild(A);const C=document.createElement("textarea");C.name="Notes",C.setAttribute("id","notes");const g=document.createElement("Label");g.setAttribute("for",A),g.innerHTML="Notes: ",t.appendChild(g),t.appendChild(C);const f=document.createElement("button");f.textContent="Add To-Do",f.setAttribute("id","printBtn"),t.appendChild(f),f.addEventListener("click",(()=>{l(d()),s(),u()}));const b=document.createElement("button");b.textContent="Edit Project",b.setAttribute("id","editTaskBtn"),t.appendChild(b),b.classList.add("hidden"),b.addEventListener("click",(()=>{l(d()),s(),u()})),e.appendChild(t),function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.children.length;t++)t%2!=0&&(5==t&&(e.children[t].value="2001-01-01"),e.children[t].value=7==t?"High":"test Value")}()})(),o(),function(){const t=document.getElementById("content"),n=document.createElement("div");n.setAttribute("id","projectModal"),n.classList.add("projectModal"),n.classList.add("hidden"),t.appendChild(n);const i=document.createElement("div");i.setAttribute("id","modalHeader"),i.textContent="Add New Project",n.appendChild(i);const r=document.createElement("div");r.setAttribute("id","modalInputContainer"),n.appendChild(r);const a=document.createElement("input");a.name="Title",a.setAttribute("id","projectTitle");const c=document.createElement("Label");c.setAttribute("for",a),c.innerHTML="Title: ",r.appendChild(c),r.appendChild(a);const d=document.createElement("button");d.setAttribute("id","cancelBtn"),d.textContent="Cancel",r.appendChild(d);const l=document.createElement("button");l.setAttribute("id","addBtn"),l.textContent="Add",l.addEventListener("click",(()=>{(function(){let t=document.getElementById("projectModal"),n=document.getElementById("projectTitle");if("addBtn"==event.currentTarget.getAttribute("id")){if(null!=localStorage.getItem(n.value))return void alert("This Project Already Exists. Choose another name");localStorage.setItem(n.value,""),e.name=n.value}t.classList.add("hidden"),t.classList.remove("projectModal"),inputContainer.classList.remove("hidden")})(),o()})),r.appendChild(l)}(),function(){const e=document.getElementById("projectModal"),t=document.getElementById("newTaskBtn"),n=document.getElementById("newProjectBtn"),o=document.getElementById("cancelBtn");n.onclick=function(){e.classList.remove("hidden"),t.classList.remove("hidden")},o.onclick=function(){e.classList.add("hidden")},window.onclick=function(t){t.target==e&&e.classList.add("hidden")}}(),u()}(),localStorage.setItem("housework",JSON.stringify({"wash dishes":{title:"wash dishes",description:"wash the dishes",date:"2023-01-01",priority:"high",notes:"there are no notes"},"cook dinner":{title:"cook dinner",description:"cook the dinner",date:"2023-02-01",priority:"low",notes:"there are some notes"},"cut grass":{title:"cut grass",description:"cut the grass",date:"2023-02-01",priority:"med",notes:"there are so many notes notes"}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),a=n.n(o),i=n(645),r=n.n(i)()(a());r.push([e.id,".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,4BAA4B;AAChC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,qCAAqC;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,OAAO;IACP,MAAM;IACN,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,gBAAgB;IAC9B,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,iCAAiC,EAAE,qBAAqB;AAC5D",sourcesContent:[".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}"],sourceRoot:""}]);const c=r},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(r[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&r[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},r=[],c=0;c<e.length;c++){var d=e[c],l=o.base?d[0]+o.base:d[0],s=i[l]||0,u="".concat(l," ").concat(s);i[l]=s+1;var p=n(u),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=a(m,o);o.byIndex=c,t.splice(c,0,{identifier:u,updater:A,references:1})}r.push(u)}return r}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var i=o(e=e||[],a=a||{});return function(e){e=e||[];for(var r=0;r<i.length;r++){var c=n(i[r]);t[c].references--}for(var d=o(e,a),l=0;l<i.length;l++){var s=n(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,a&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{function e(e,t,n,o,a){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.notes=a}const t=function(){document.getElementById("projectModal");const e={name:""},t=document.getElementById("projectTitle");if(e.name=t.value,null==localStorage.getItem(e.name))return localStorage.setItem(e.name,""),console.log(localStorage),projectModal.classList.add("hidden"),inputContainer.classList.remove("hidden"),e;alert("This Project Already Exists. Choose another name")};var o=n(379),a=n.n(o),i=n(795),r=n.n(i),c=n(569),d=n.n(c),l=n(565),s=n.n(l),u=n(216),p=n.n(u),m=n(589),A=n.n(m),h=n(426),f={};f.styleTagTransform=A(),f.setAttributes=s(),f.insert=d().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=p(),a()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals,function(){localStorage.clear();const n=document.getElementById("content"),o=document.createElement("div");o.textContent="This is my header",o.setAttribute("id","header"),n.appendChild(o),o.classList.add("container");const a=document.createElement("div");a.setAttribute("id","taskContainer"),a.style.backgroundColor="grey",n.appendChild(a);const i=document.createElement("div");i.setAttribute("id","sidebar"),i.textContent="This is my sidebar",a.appendChild(i);const r=document.createElement("div");r.setAttribute("id","projectMenu"),i.appendChild(r);const c=document.createElement("button");c.textContent="Add New Project",c.setAttribute("id","newProjectBtn"),r.appendChild(c);const d=document.createElement("div");d.setAttribute("id","taskDisplay"),d.textContent="This is my task display",a.appendChild(d),function(){const e=document.getElementById("content"),n=document.createElement("div");n.setAttribute("id","projectModal"),n.classList.add("projectModal"),n.classList.add("hidden"),e.appendChild(n);const o=document.createElement("div");o.setAttribute("id","modalHeader"),o.textContent="Add New Project",n.appendChild(o);const a=document.createElement("div");a.setAttribute("id","modalInputContainer"),n.appendChild(a);const i=document.createElement("input");i.name="Title",i.setAttribute("id","projectTitle");const r=document.createElement("Label");r.setAttribute("for",i),r.innerHTML="Title: ",a.appendChild(r),a.appendChild(i);const c=document.createElement("button");c.setAttribute("id","cancelBtn"),c.textContent="Cancel",a.appendChild(c);const d=document.createElement("button");d.setAttribute("id","addBtn"),d.textContent="Add",d.addEventListener("click",(()=>t())),a.appendChild(d)}(),function(){const e=document.getElementById("projectModal"),t=document.getElementById("newProjectBtn"),n=document.getElementById("cancelBtn");t.onclick=function(){e.classList.remove("hidden")},n.onclick=function(){e.classList.add("hidden")},window.onclick=function(t){t.target==e&&e.classList.add("hidden")}}(),(()=>{const t=document.getElementById("taskDisplay"),n=document.createElement("div");n.setAttribute("id","inputContainer"),n.classList.add("hidden");const o=document.createElement("input");o.name="Title",o.setAttribute("id","title");const a=document.createElement("Label");a.setAttribute("for",o),a.innerHTML="Title: ",n.appendChild(a),n.appendChild(o);const i=document.createElement("textarea");i.name="Description",i.setAttribute("id","desc");const r=document.createElement("Label");r.setAttribute("for",i),r.innerHTML="Description: ",n.appendChild(r),n.appendChild(i);const c=document.createElement("input");c.type="date",c.name="Due",c.setAttribute("id","due");const d=document.createElement("Label");d.setAttribute("for",c),d.innerHTML="Due Date: ",n.appendChild(d),n.appendChild(c);const l=document.createElement("select");l.name="Priority",l.setAttribute("id","priority");let s=["Low","Medium","High","Ugent"];for(const e of s){var u=document.createElement("option");u.value=e,u.text=e.charAt(0).toUpperCase()+e.slice(1),l.appendChild(u)}const p=document.createElement("Label");p.setAttribute("for",l),p.innerHTML="Priority: ",n.appendChild(p),n.appendChild(l);const m=document.createElement("textarea");m.name="Notes",m.setAttribute("id","notes");const A=document.createElement("Label");A.setAttribute("for",l),A.innerHTML="Notes: ",n.appendChild(A),n.appendChild(m);const h=document.createElement("button");h.textContent="Add To-Do",h.setAttribute("id","printBtn"),n.appendChild(h),h.addEventListener("click",(()=>{return t=new e(document.getElementById("title").value,document.getElementById("desc").value,document.getElementById("due").value,document.getElementById("priority").value,document.getElementById("notes").value),void(null==localStorage.getItem(t.title)?(localStorage.setItem(t.title,JSON.stringify(t)),console.log(localStorage)):alert("This Task Already Exists. Choose another name"));var t})),t.appendChild(n),function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.children.length;t++)t%2!=0&&(5==t&&(e.children[t].value="2001-01-01"),e.children[t].value=7==t?"High":"test Value")}()})(),alert("branch")}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
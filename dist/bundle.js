(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n\n#bar {\n    margin: 8px\n}\n\n#bar:hover {\n    background-color: cadetblue;\n}\n\n#taskDisplay {\n    min-height: 100vh;\n    min-width: 80vw;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.highlight {\n    background-color: blueviolet;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n.sidebarSelect{\n    background-color: cornsilk;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,4BAA4B;AAChC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;AAC/B;;AAEA;IACI;AACJ;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,qCAAqC;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,OAAO;IACP,MAAM;IACN,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,gBAAgB;IAC9B,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,iCAAiC,EAAE,qBAAqB;AAC5D;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:[".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n\n#bar {\n    margin: 8px\n}\n\n#bar:hover {\n    background-color: cadetblue;\n}\n\n#taskDisplay {\n    min-height: 100vh;\n    min-width: 80vw;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.highlight {\n    background-color: blueviolet;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n.sidebarSelect{\n    background-color: cornsilk;\n}"],sourceRoot:""}]);const d=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&a[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],d=0;d<e.length;d++){var c=e[d],l=o.base?c[0]+o.base:c[0],s=r[l]||0,u="".concat(l," ").concat(s);r[l]=s+1;var p=n(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=i(m,o);o.byIndex=d,t.splice(d,0,{identifier:u,updater:A,references:1})}a.push(u)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var d=n(r[a]);t[d].references--}for(var c=o(e,i),l=0;l<r.length;l++){var s=n(r[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}r=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e={name:""},t=function(){return e.name},o=()=>{const t=document.getElementById("sidebar");for(;t.childElementCount>2;)t.removeChild(t.lastChild);for(let n=0;n<=localStorage.length;n++){const o=localStorage.key(n),i=document.createElement("div"),r=document.getElementById("inputContainer");i.setAttribute("id","bar"),i.textContent=o,t.appendChild(i),i.addEventListener("click",(()=>{e.name=event.target.textContent,u(),r.classList.remove("hidden")}))}};function i(e){return Array.from(e.parentNode.children).filter((function(t){return t!==e}))}const r=function(){let e=i(event.currentTarget.parentNode)[0].textContent,n=JSON.parse(localStorage.getItem(t()));delete n[e],localStorage.setItem(t(),JSON.stringify(n)),console.log(localStorage.getItem(t()))},a=function(){document.getElementById("editTaskBtn").classList.remove("hidden");let e=i(event.currentTarget.parentNode)[0].textContent,n=JSON.parse(localStorage.getItem(t()));inputContainer.classList.remove("hidden"),document.getElementById("title").value=n[e].title,document.getElementById("desc").value=n[e].description,document.getElementById("due").value=n[e].due,document.getElementById("priority").value=n[e].priority,document.getElementById("notes").value=n[e].notes,delete n[e],localStorage.setItem(t(),JSON.stringify(n))};function d(e,t,n,o,i){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.notes=i}const c=function(){return new d(document.getElementById("title").value,document.getElementById("desc").value,document.getElementById("due").value,document.getElementById("priority").value,document.getElementById("notes").value)};function l(e){let n=t();if(null==localStorage.getItem(e.title))if(""==localStorage.getItem(n)){let t={[e.title]:e};localStorage.setItem(n,JSON.stringify(t)),console.log(localStorage)}else{let t=JSON.parse(localStorage.getItem(n)),o={[e.title]:e};t=Object.assign(t,o),localStorage.setItem(n,JSON.stringify(t))}else alert("This Task Already Exists. Choose another name")}const s=function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.childElementCount;t++)"LABEL"!==e.children[t].nodeName&&(e.children[t].value="");e.classList.add("hidden")},u=function(){const e=document.getElementById("taskDisplay"),n=t();for(;e.childElementCount>1;)e.removeChild(e.lastChild);let o=localStorage.getItem(n);if(""!==o&&(o=JSON.parse(o)),""!==n)for(let t=0;t<Object.keys(o).length;t++){const n=document.createElement("div");n.setAttribute("id","card"),e.appendChild(n);const i=document.createElement("div");i.setAttribute("id","cardTitle"),i.textContent=Object.values(o)[t].title,n.appendChild(i);const d=document.createElement("div");d.setAttribute("id","cardDesc"),d.textContent=Object.values(o)[t].description,n.appendChild(d);const c=document.createElement("div");c.setAttribute("id","cardDue"),c.textContent=Object.values(o)[t].date,n.appendChild(c);const l=document.createElement("div");l.setAttribute("id","cardPriority"),l.textContent=Object.values(o)[t].priority,n.appendChild(l);const s=document.createElement("div");s.setAttribute("id","cardNotes"),s.textContent=Object.values(o)[t].notes,n.appendChild(s);const p=document.createElement("div");p.setAttribute("id","edits"),n.appendChild(p);const m=document.createElement("div");m.setAttribute("id","edit"),m.textContent="edit",p.appendChild(m),m.addEventListener("click",(()=>{a()}));const A=document.createElement("div");A.setAttribute("id","deleteTask"),A.textContent="X",p.appendChild(A),A.addEventListener("click",(()=>{r(),u()}))}};var p=n(379),m=n.n(p),A=n(795),h=n.n(A),C=n(569),f=n.n(C),g=n(565),v=n.n(g),b=n(216),E=n.n(b),y=n(589),I=n.n(y),B=n(426),x={};x.styleTagTransform=I(),x.setAttributes=v(),x.insert=f().bind(null,"head"),x.domAPI=h(),x.insertStyleElement=E(),m()(B.Z,x),B.Z&&B.Z.locals&&B.Z.locals,function(){const t=document.getElementById("content"),n=document.createElement("div");n.textContent="This is my header",n.setAttribute("id","header"),t.appendChild(n),n.classList.add("container");const i=document.createElement("div");i.setAttribute("id","taskContainer"),i.style.backgroundColor="grey",t.appendChild(i);const r=document.createElement("div");r.setAttribute("id","sidebar"),r.textContent="This is my sidebar",i.appendChild(r);const a=document.createElement("div");a.setAttribute("id","projectList"),a.textContent="This is my projectList",r.appendChild(a);const d=document.createElement("div");d.setAttribute("id","projectAddContainer"),d.textContent="This is my projectAddContainer",r.appendChild(d);const p=document.createElement("button");d.appendChild(p),p.textContent="Add New Project",p.setAttribute("id","newProjectBtn");const m=document.createElement("button");m.textContent="Add New Task",m.setAttribute("id","newTaskBtn"),d.appendChild(m),m.classList.add("hidden"),m.addEventListener("click",(()=>{document.getElementById("inputContainer").classList.remove("hidden")}));const A=document.createElement("div");A.setAttribute("id","taskDisplay"),A.textContent="This is my task display",i.appendChild(A);const h=document.createElement("button");h.textContent="CLEAR",h.addEventListener("click",(()=>localStorage.clear()));const C=document.createElement("button");C.textContent="ppp";const f=document.createElement("div");t.appendChild(f),f.appendChild(h),f.appendChild(C),(()=>{const e=document.getElementById("taskDisplay"),t=document.createElement("div");t.setAttribute("id","inputContainer"),t.classList.add("hidden");const n=document.createElement("input");n.name="Title",n.setAttribute("id","title");const o=document.createElement("Label");o.setAttribute("for",n),o.innerHTML="Title: ",t.appendChild(o),t.appendChild(n);const i=document.createElement("textarea");i.name="Description",i.setAttribute("id","desc");const r=document.createElement("Label");r.setAttribute("for",i),r.innerHTML="Description: ",t.appendChild(r),t.appendChild(i);const a=document.createElement("input");a.type="date",a.name="Due",a.setAttribute("id","due");const d=document.createElement("Label");d.setAttribute("for",a),d.innerHTML="Due Date: ",t.appendChild(d),t.appendChild(a);const p=document.createElement("select");p.name="Priority",p.setAttribute("id","priority");let m=["Low","Medium","High","Ugent"];for(const e of m){var A=document.createElement("option");A.value=e,A.text=e.charAt(0).toUpperCase()+e.slice(1),p.appendChild(A)}const h=document.createElement("Label");h.setAttribute("for",p),h.innerHTML="Priority: ",t.appendChild(h),t.appendChild(p);const C=document.createElement("textarea");C.name="Notes",C.setAttribute("id","notes");const f=document.createElement("Label");f.setAttribute("for",p),f.innerHTML="Notes: ",t.appendChild(f),t.appendChild(C);const g=document.createElement("button");g.textContent="Add To-Do",g.setAttribute("id","printBtn"),t.appendChild(g),g.addEventListener("click",(()=>{l(c()),s(),u()}));const v=document.createElement("button");v.textContent="Edit Project",v.setAttribute("id","editTaskBtn"),t.appendChild(v),v.classList.add("hidden"),v.addEventListener("click",(()=>{l(c()),s(),u()})),e.appendChild(t),function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.children.length;t++)t%2!=0&&(5==t&&(e.children[t].value="2001-01-01"),e.children[t].value=7==t?"High":"test Value")}()})(),o(),function(){const t=document.getElementById("content"),n=document.createElement("div");n.setAttribute("id","projectModal"),n.classList.add("projectModal"),n.classList.add("hidden"),t.appendChild(n);const i=document.createElement("div");i.setAttribute("id","modalHeader"),i.textContent="Add New Project",n.appendChild(i);const r=document.createElement("div");r.setAttribute("id","modalInputContainer"),n.appendChild(r);const a=document.createElement("input");a.name="Title",a.setAttribute("id","projectTitle");const d=document.createElement("Label");d.setAttribute("for",a),d.innerHTML="Title: ",r.appendChild(d),r.appendChild(a);const c=document.createElement("button");c.setAttribute("id","cancelBtn"),c.textContent="Cancel",r.appendChild(c);const l=document.createElement("button");l.setAttribute("id","addBtn"),l.textContent="Add",l.addEventListener("click",(()=>{(function(){let t=document.getElementById("projectModal"),n=document.getElementById("projectTitle");if("addBtn"==event.currentTarget.getAttribute("id")){if(null!=localStorage.getItem(n.value))return void alert("This Project Already Exists. Choose another name");localStorage.setItem(n.value,""),e.name=n.value}t.classList.add("hidden"),inputContainer.classList.remove("hidden")})(),o()})),r.appendChild(l)}(),function(){const e=document.getElementById("projectModal"),t=document.getElementById("newTaskBtn"),n=document.getElementById("newProjectBtn"),o=document.getElementById("cancelBtn");n.onclick=function(){e.classList.remove("hidden"),t.classList.remove("hidden")},o.onclick=function(){e.classList.add("hidden")},window.onclick=function(t){t.target==e&&e.classList.add("hidden")}}(),u()}(),localStorage.setItem("housework",JSON.stringify({"wash dishes":{title:"wash dishes",description:"wash the dishes",date:"2023-01-01",priority:"high",notes:"there are no notes"},"cook dinner":{title:"cook dinner",description:"cook the dinner",date:"2023-02-01",priority:"low",notes:"there are some notes"},"cut grass":{title:"cut grass",description:"cut the grass",date:"2023-02-01",priority:"med",notes:"there are so many notes notes"}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
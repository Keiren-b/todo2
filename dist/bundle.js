(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,4BAA4B;AAChC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,qCAAqC;IACrC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,eAAe;IAC3B,OAAO;IACP,MAAM;IACN,WAAW,EAAE,eAAe;IAC5B,YAAY,EAAE,gBAAgB;IAC9B,cAAc,EAAE,4BAA4B;IAC5C,4BAA4B,EAAE,mBAAmB;IACjD,iCAAiC,EAAE,qBAAqB;AAC5D",sourcesContent:[".container {\n    background-color: lightcoral;\n}\n\n.hidden {\n    display: none;\n}\n\n#taskContainer {\n    display: flex;\n}\n\n#inputContainer.hidden {\n    display: none;\n}\n\n#inputContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.projectModal {\n    /* display: none; Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&a[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],c=0;c<e.length;c++){var d=e[c],l=o.base?d[0]+o.base:d[0],s=r[l]||0,u="".concat(l," ").concat(s);r[l]=s+1;var p=n(u),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=i(m,o);o.byIndex=c,t.splice(c,0,{identifier:u,updater:A,references:1})}a.push(u)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var c=n(r[a]);t[c].references--}for(var d=o(e,i),l=0;l<r.length;l++){var s=n(r[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}r=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{const e={name:""},t=function(){return e.name};function o(e,t,n,o,i){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.notes=i}var i=n(379),r=n.n(i),a=n(795),c=n.n(a),d=n(569),l=n.n(d),s=n(565),u=n.n(s),p=n(216),m=n.n(p),A=n(589),h=n.n(A),f=n(426),C={};C.styleTagTransform=h(),C.setAttributes=u(),C.insert=l().bind(null,"head"),C.domAPI=c(),C.insertStyleElement=m(),r()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals,function(){const n=document.getElementById("content"),i=document.createElement("div");i.textContent="This is my header",i.setAttribute("id","header"),n.appendChild(i),i.classList.add("container");const r=document.createElement("div");r.setAttribute("id","taskContainer"),r.style.backgroundColor="grey",n.appendChild(r);const a=document.createElement("div");a.setAttribute("id","sidebar"),a.textContent="This is my sidebar",r.appendChild(a);const c=document.createElement("div");c.setAttribute("id","projectMenu"),a.appendChild(c);const d=document.createElement("button");d.textContent="Add New Project",d.setAttribute("id","newProjectBtn"),c.appendChild(d);const l=document.createElement("div");l.setAttribute("id","taskDisplay"),l.textContent="This is my task display",r.appendChild(l);const s=document.createElement("button");l.appendChild(s),s.textContent="CLEAR",s.addEventListener("click",(()=>localStorage.clear())),function(){const t=document.getElementById("content"),n=document.createElement("div");n.setAttribute("id","projectModal"),n.classList.add("projectModal"),n.classList.add("hidden"),t.appendChild(n);const o=document.createElement("div");o.setAttribute("id","modalHeader"),o.textContent="Add New Project",n.appendChild(o);const i=document.createElement("div");i.setAttribute("id","modalInputContainer"),n.appendChild(i);const r=document.createElement("input");r.name="Title",r.setAttribute("id","projectTitle");const a=document.createElement("Label");a.setAttribute("for",r),a.innerHTML="Title: ",i.appendChild(a),i.appendChild(r);const c=document.createElement("button");c.setAttribute("id","cancelBtn"),c.textContent="Cancel",i.appendChild(c);const d=document.createElement("button");d.setAttribute("id","addBtn"),d.textContent="Add",d.addEventListener("click",(()=>function(){let t=document.getElementById("projectModal"),n=document.getElementById("projectTitle");if("addBtn"==event.currentTarget.getAttribute("id")){if(null!=localStorage.getItem(n.value))return void alert("This Project Already Exists. Choose another name");localStorage.setItem(n.value,""),e.name=n.value}t.classList.add("hidden"),inputContainer.classList.remove("hidden")}())),i.appendChild(d)}(),function(){const e=document.getElementById("projectModal"),t=document.getElementById("newProjectBtn"),n=document.getElementById("cancelBtn");t.onclick=function(){e.classList.remove("hidden")},n.onclick=function(){e.classList.add("hidden")},window.onclick=function(t){t.target==e&&e.classList.add("hidden")}}(),(()=>{const e=document.getElementById("taskDisplay"),n=document.createElement("div");n.setAttribute("id","inputContainer"),n.classList.add("hidden");const i=document.createElement("input");i.name="Title",i.setAttribute("id","title");const r=document.createElement("Label");r.setAttribute("for",i),r.innerHTML="Title: ",n.appendChild(r),n.appendChild(i);const a=document.createElement("textarea");a.name="Description",a.setAttribute("id","desc");const c=document.createElement("Label");c.setAttribute("for",a),c.innerHTML="Description: ",n.appendChild(c),n.appendChild(a);const d=document.createElement("input");d.type="date",d.name="Due",d.setAttribute("id","due");const l=document.createElement("Label");l.setAttribute("for",d),l.innerHTML="Due Date: ",n.appendChild(l),n.appendChild(d);const s=document.createElement("select");s.name="Priority",s.setAttribute("id","priority");let u=["Low","Medium","High","Ugent"];for(const e of u){var p=document.createElement("option");p.value=e,p.text=e.charAt(0).toUpperCase()+e.slice(1),s.appendChild(p)}const m=document.createElement("Label");m.setAttribute("for",s),m.innerHTML="Priority: ",n.appendChild(m),n.appendChild(s);const A=document.createElement("textarea");A.name="Notes",A.setAttribute("id","notes");const h=document.createElement("Label");h.setAttribute("for",s),h.innerHTML="Notes: ",n.appendChild(h),n.appendChild(A);const f=document.createElement("button");f.textContent="Add To-Do",f.setAttribute("id","printBtn"),n.appendChild(f),f.addEventListener("click",(()=>function(e){let n=t();if(null==localStorage.getItem(e.title))if(""==localStorage.getItem(n)){let t={[e.title]:e};localStorage.setItem(n,JSON.stringify(t)),console.log(localStorage)}else{let t=JSON.parse(localStorage.getItem(n)),o={[e.title]:e};t=Object.assign(t,o),localStorage.setItem(n,JSON.stringify(t))}else alert("This Task Already Exists. Choose another name")}(new o(document.getElementById("title").value,document.getElementById("desc").value,document.getElementById("due").value,document.getElementById("priority").value,document.getElementById("notes").value)))),e.appendChild(n),function(){const e=document.getElementById("inputContainer");for(let t=0;t<e.children.length;t++)t%2!=0&&(5==t&&(e.children[t].value="2001-01-01"),e.children[t].value=7==t?"High":"test Value")}()})()}(),localStorage.setItem("housework",JSON.stringify({washing:{title:"wash dishes",description:"wash the dishes",date:"2023-01-01",priority:"high",notes:"there are no notes"},cooking:{title:"cook dinner",description:"cook the dinner",date:"2023-02-01",priority:"low",notes:"there are some notes"},yard:{title:"cut grass",description:"cut the grass",date:"2023-02-01",priority:"med",notes:"there are so many notes notes"}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ3RkFHSUEsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSwycEJBZ0NyQyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyw2QkFBNkIsTUFBUSxHQUFHLFNBQVcsMFVBQTBVLGVBQWlCLENBQUMsNHBCQUE0cEIsV0FBYSxNQUV2bEMsUyxVQ2pDQUQsRUFBT0UsUUFBVSxTQUFVQyxHQUN6QixJQUFJQyxFQUFPLEdBNEVYLE9BekVBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0MsS0FBS0MsS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVLEdBQ1ZDLE9BQStCLElBQVpGLEVBQUssR0FvQjVCLE9BbkJJQSxFQUFLLEtBQ1BDLEdBQVcsY0FBY0UsT0FBT0gsRUFBSyxHQUFJLFFBRXZDQSxFQUFLLEtBQ1BDLEdBQVcsVUFBVUUsT0FBT0gsRUFBSyxHQUFJLE9BRW5DRSxJQUNGRCxHQUFXLFNBQVNFLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE9BRTVFQyxHQUFXTixFQUF1QkssR0FDOUJFLElBQ0ZELEdBQVcsS0FFVEQsRUFBSyxLQUNQQyxHQUFXLEtBRVRELEVBQUssS0FDUEMsR0FBVyxLQUVOQSxDQUNULElBQUdJLEtBQUssR0FDVixFQUdBVCxFQUFLVSxFQUFJLFNBQVdDLEVBQVNDLEVBQU9DLEVBQVFDLEVBQVVDLEdBQzdCLGlCQUFaSixJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxPQUFTSyxLQUU3QixJQUFJQyxFQUF5QixDQUFDLEVBQzlCLEdBQUlKLEVBQ0YsSUFBSyxJQUFJSyxFQUFJLEVBQUdBLEVBQUloQixLQUFLTSxPQUFRVSxJQUFLLENBQ3BDLElBQUlyQixFQUFLSyxLQUFLZ0IsR0FBRyxHQUNQLE1BQU5yQixJQUNGb0IsRUFBdUJwQixJQUFNLEVBRWpDLENBRUYsSUFBSyxJQUFJc0IsRUFBSyxFQUFHQSxFQUFLUixFQUFRSCxPQUFRVyxJQUFNLENBQzFDLElBQUlmLEVBQU8sR0FBR0csT0FBT0ksRUFBUVEsSUFDekJOLEdBQVVJLEVBQXVCYixFQUFLLFdBR3JCLElBQVZXLFNBQ2MsSUFBWlgsRUFBSyxLQUdkQSxFQUFLLEdBQUssU0FBU0csT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLE1BRi9GQSxFQUFLLEdBQUtXLEdBTVZILElBQ0dSLEVBQUssSUFHUkEsRUFBSyxHQUFLLFVBQVVHLE9BQU9ILEVBQUssR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksS0FDMURBLEVBQUssR0FBS1EsR0FIVlIsRUFBSyxHQUFLUSxHQU1WRSxJQUNHVixFQUFLLElBR1JBLEVBQUssR0FBSyxjQUFjRyxPQUFPSCxFQUFLLEdBQUksT0FBT0csT0FBT0gsRUFBSyxHQUFJLEtBQy9EQSxFQUFLLEdBQUtVLEdBSFZWLEVBQUssR0FBSyxHQUFHRyxPQUFPTyxJQU14QmQsRUFBS0wsS0FBS1MsR0FDWixDQUNGLEVBQ09KLENBQ1QsQyxVQ2xGQUosRUFBT0UsUUFBVSxTQUFVTSxHQUN6QixJQUFJQyxFQUFVRCxFQUFLLEdBQ2ZnQixFQUFhaEIsRUFBSyxHQUN0QixJQUFLZ0IsRUFDSCxPQUFPZixFQUVULEdBQW9CLG1CQUFUZ0IsS0FBcUIsQ0FDOUIsSUFBSUMsRUFBU0QsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVTixNQUN6RE8sRUFBTywrREFBK0RwQixPQUFPZSxHQUM3RU0sRUFBZ0IsT0FBT3JCLE9BQU9vQixFQUFNLE9BQ3hDLE1BQU8sQ0FBQ3RCLEdBQVNFLE9BQU8sQ0FBQ3FCLElBQWdCbkIsS0FBSyxLQUNoRCxDQUNBLE1BQU8sQ0FBQ0osR0FBU0ksS0FBSyxLQUN4QixDLFVDYkEsSUFBSW9CLEVBQWMsR0FDbEIsU0FBU0MsRUFBcUJDLEdBRTVCLElBREEsSUFBSUMsR0FBVSxFQUNMdEIsRUFBSSxFQUFHQSxFQUFJbUIsRUFBWXJCLE9BQVFFLElBQ3RDLEdBQUltQixFQUFZbkIsR0FBR3FCLGFBQWVBLEVBQVksQ0FDNUNDLEVBQVN0QixFQUNULEtBQ0YsQ0FFRixPQUFPc0IsQ0FDVCxDQUNBLFNBQVNDLEVBQWFqQyxFQUFNa0MsR0FHMUIsSUFGQSxJQUFJQyxFQUFhLENBQUMsRUFDZEMsRUFBYyxHQUNUMUIsRUFBSSxFQUFHQSxFQUFJVixFQUFLUSxPQUFRRSxJQUFLLENBQ3BDLElBQUlOLEVBQU9KLEVBQUtVLEdBQ1piLEVBQUtxQyxFQUFRRyxLQUFPakMsRUFBSyxHQUFLOEIsRUFBUUcsS0FBT2pDLEVBQUssR0FDbERrQyxFQUFRSCxFQUFXdEMsSUFBTyxFQUMxQmtDLEVBQWEsR0FBR3hCLE9BQU9WLEVBQUksS0FBS1UsT0FBTytCLEdBQzNDSCxFQUFXdEMsR0FBTXlDLEVBQVEsRUFDekIsSUFBSUMsRUFBb0JULEVBQXFCQyxHQUN6Q1MsRUFBTSxDQUNSQyxJQUFLckMsRUFBSyxHQUNWUSxNQUFPUixFQUFLLEdBQ1pzQyxVQUFXdEMsRUFBSyxHQUNoQlUsU0FBVVYsRUFBSyxHQUNmVyxNQUFPWCxFQUFLLElBRWQsSUFBMkIsSUFBdkJtQyxFQUNGVixFQUFZVSxHQUFtQkksYUFDL0JkLEVBQVlVLEdBQW1CSyxRQUFRSixPQUNsQyxDQUNMLElBQUlJLEVBQVVDLEVBQWdCTCxFQUFLTixHQUNuQ0EsRUFBUVksUUFBVXBDLEVBQ2xCbUIsRUFBWWtCLE9BQU9yQyxFQUFHLEVBQUcsQ0FDdkJxQixXQUFZQSxFQUNaYSxRQUFTQSxFQUNURCxXQUFZLEdBRWhCLENBQ0FQLEVBQVl6QyxLQUFLb0MsRUFDbkIsQ0FDQSxPQUFPSyxDQUNULENBQ0EsU0FBU1MsRUFBZ0JMLEVBQUtOLEdBQzVCLElBQUljLEVBQU1kLEVBQVFlLE9BQU9mLEdBWXpCLE9BWEFjLEVBQUlFLE9BQU9WLEdBQ0csU0FBaUJXLEdBQzdCLEdBQUlBLEVBQVEsQ0FDVixHQUFJQSxFQUFPVixNQUFRRCxFQUFJQyxLQUFPVSxFQUFPdkMsUUFBVTRCLEVBQUk1QixPQUFTdUMsRUFBT1QsWUFBY0YsRUFBSUUsV0FBYVMsRUFBT3JDLFdBQWEwQixFQUFJMUIsVUFBWXFDLEVBQU9wQyxRQUFVeUIsRUFBSXpCLE1BQ3pKLE9BRUZpQyxFQUFJRSxPQUFPVixFQUFNVyxFQUNuQixNQUNFSCxFQUFJSSxRQUVSLENBRUYsQ0FDQXhELEVBQU9FLFFBQVUsU0FBVUUsRUFBTWtDLEdBRy9CLElBQUltQixFQUFrQnBCLEVBRHRCakMsRUFBT0EsR0FBUSxHQURma0MsRUFBVUEsR0FBVyxDQUFDLEdBR3RCLE9BQU8sU0FBZ0JvQixHQUNyQkEsRUFBVUEsR0FBVyxHQUNyQixJQUFLLElBQUk1QyxFQUFJLEVBQUdBLEVBQUkyQyxFQUFnQjdDLE9BQVFFLElBQUssQ0FDL0MsSUFDSTZDLEVBQVF6QixFQURLdUIsRUFBZ0IzQyxJQUVqQ21CLEVBQVkwQixHQUFPWixZQUNyQixDQUVBLElBREEsSUFBSWEsRUFBcUJ2QixFQUFhcUIsRUFBU3BCLEdBQ3RDdUIsRUFBSyxFQUFHQSxFQUFLSixFQUFnQjdDLE9BQVFpRCxJQUFNLENBQ2xELElBQ0lDLEVBQVM1QixFQURLdUIsRUFBZ0JJLElBRUssSUFBbkM1QixFQUFZNkIsR0FBUWYsYUFDdEJkLEVBQVk2QixHQUFRZCxVQUNwQmYsRUFBWWtCLE9BQU9XLEVBQVEsR0FFL0IsQ0FDQUwsRUFBa0JHLENBQ3BCLENBQ0YsQyxVQ2pGQSxJQUFJRyxFQUFPLENBQUMsRUErQlovRCxFQUFPRSxRQVBQLFNBQTBCOEQsRUFBUUMsR0FDaEMsSUFBSUMsRUF0Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCSCxFQUFLRyxHQUF5QixDQUN2QyxJQUFJQyxFQUFjQyxTQUFTQyxjQUFjSCxHQUd6QyxHQUFJSSxPQUFPQyxtQkFBcUJKLGFBQXVCRyxPQUFPQyxrQkFDNUQsSUFHRUosRUFBY0EsRUFBWUssZ0JBQWdCQyxJQUM1QyxDQUFFLE1BQU9DLEdBRVBQLEVBQWMsSUFDaEIsQ0FFRkosRUFBS0csR0FBVUMsQ0FDakIsQ0FDQSxPQUFPSixFQUFLRyxFQUNkLENBSWVTLENBQVVYLEdBQ3ZCLElBQUtFLEVBQ0gsTUFBTSxJQUFJVSxNQUFNLDJHQUVsQlYsRUFBT1csWUFBWVosRUFDckIsQyxVQ3ZCQWpFLEVBQU9FLFFBTlAsU0FBNEJvQyxHQUMxQixJQUFJd0MsRUFBVVYsU0FBU1csY0FBYyxTQUdyQyxPQUZBekMsRUFBUTBDLGNBQWNGLEVBQVN4QyxFQUFRMkMsWUFDdkMzQyxFQUFRMEIsT0FBT2MsRUFBU3hDLEVBQVFBLFNBQ3pCd0MsQ0FDVCxDLGdCQ0NBOUUsRUFBT0UsUUFOUCxTQUF3Q2dGLEdBQ3RDLElBQUlDLEVBQW1ELEtBQ25EQSxHQUNGRCxFQUFhRSxhQUFhLFFBQVNELEVBRXZDLEMsVUNvREFuRixFQUFPRSxRQWpCUCxTQUFnQm9DLEdBQ2QsR0FBd0Isb0JBQWI4QixTQUNULE1BQU8sQ0FDTGQsT0FBUSxXQUFtQixFQUMzQkUsT0FBUSxXQUFtQixHQUcvQixJQUFJMEIsRUFBZTVDLEVBQVErQyxtQkFBbUIvQyxHQUM5QyxNQUFPLENBQ0xnQixPQUFRLFNBQWdCVixJQWpENUIsU0FBZXNDLEVBQWM1QyxFQUFTTSxHQUNwQyxJQUFJQyxFQUFNLEdBQ05ELEVBQUkxQixXQUNOMkIsR0FBTyxjQUFjbEMsT0FBT2lDLEVBQUkxQixTQUFVLFFBRXhDMEIsRUFBSTVCLFFBQ042QixHQUFPLFVBQVVsQyxPQUFPaUMsRUFBSTVCLE1BQU8sT0FFckMsSUFBSU4sT0FBaUMsSUFBZGtDLEVBQUl6QixNQUN2QlQsSUFDRm1DLEdBQU8sU0FBU2xDLE9BQU9pQyxFQUFJekIsTUFBTVAsT0FBUyxFQUFJLElBQUlELE9BQU9pQyxFQUFJekIsT0FBUyxHQUFJLE9BRTVFMEIsR0FBT0QsRUFBSUMsSUFDUG5DLElBQ0ZtQyxHQUFPLEtBRUxELEVBQUk1QixRQUNONkIsR0FBTyxLQUVMRCxFQUFJMUIsV0FDTjJCLEdBQU8sS0FFVCxJQUFJQyxFQUFZRixFQUFJRSxVQUNoQkEsR0FBNkIsb0JBQVRyQixPQUN0Qm9CLEdBQU8sdURBQXVEbEMsT0FBT2MsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVZ0IsTUFBZSxRQUt0SVIsRUFBUWdELGtCQUFrQnpDLEVBQUtxQyxFQUFjNUMsRUFBUUEsUUFDdkQsQ0FvQk1pRCxDQUFNTCxFQUFjNUMsRUFBU00sRUFDL0IsRUFDQVksT0FBUSxZQXJCWixTQUE0QjBCLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhTSxXQUNmLE9BQU8sRUFFVE4sRUFBYU0sV0FBV0MsWUFBWVAsRUFDdEMsQ0FnQk1RLENBQW1CUixFQUNyQixFQUVKLEMsVUM5Q0FsRixFQUFPRSxRQVZQLFNBQTJCMkMsRUFBS3FDLEdBQzlCLEdBQUlBLEVBQWFTLFdBQ2ZULEVBQWFTLFdBQVdDLFFBQVUvQyxNQUM3QixDQUNMLEtBQU9xQyxFQUFhVyxZQUNsQlgsRUFBYU8sWUFBWVAsRUFBYVcsWUFFeENYLEVBQWFMLFlBQVlULFNBQVMwQixlQUFlakQsR0FDbkQsQ0FDRixDLEdDWElrRCxFQUEyQixDQUFDLEVBR2hDLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUI3RSxJQUFqQjhFLEVBQ0gsT0FBT0EsRUFBYWhHLFFBR3JCLElBQUlGLEVBQVMrRixFQUF5QkUsR0FBWSxDQUNqRGhHLEdBQUlnRyxFQUVKL0YsUUFBUyxDQUFDLEdBT1gsT0FIQWlHLEVBQW9CRixHQUFVakcsRUFBUUEsRUFBT0UsUUFBUzhGLEdBRy9DaEcsRUFBT0UsT0FDZixDQ3JCQThGLEVBQW9CSSxFQUFLcEcsSUFDeEIsSUFBSXFHLEVBQVNyRyxHQUFVQSxFQUFPc0csV0FDN0IsSUFBT3RHLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBZ0csRUFBb0JPLEVBQUVGLEVBQVEsQ0FBRUcsRUFBR0gsSUFDNUJBLENBQU0sRUNMZEwsRUFBb0JPLEVBQUksQ0FBQ3JHLEVBQVN1RyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRXpHLEVBQVN3RyxJQUM1RUUsT0FBT0MsZUFBZTNHLEVBQVN3RyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsSUFFMUUsRUNORFYsRUFBb0JXLEVBQUksQ0FBQy9ELEVBQUtvRSxJQUFVSixPQUFPSyxVQUFVQyxlQUFlQyxLQUFLdkUsRUFBS29FLEdDQWxGaEIsRUFBb0JvQixRQUFLaEcsRSxNQ0N6QixNQWlFVWlHLEVBQWlCLENBQ25CQyxLQUFLLElBR0hDLEVBQXVCLFdBQ3JCLE9BQU9GLEVBQWVDLElBQzlCLEVDckVKLFNBQVNFLEVBQUtDLEVBQU9DLEVBQWFDLEVBQVNDLEVBQVVDLEdBQ2pEdkgsS0FBS21ILE1BQVFBLEVBQ2JuSCxLQUFLb0gsWUFBY0EsRUFDbkJwSCxLQUFLcUgsUUFBVUEsRUFDZnJILEtBQUtzSCxTQUFXQSxFQUNoQnRILEtBQUt1SCxNQUFRQSxDQUNqQixDLHlIQ0VJdkYsRUFBVSxDQUFDLEVBRWZBLEVBQVFnRCxrQkFBb0IsSUFDNUJoRCxFQUFRMEMsY0FBZ0IsSUFFbEIxQyxFQUFRMEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MxQixFQUFRZSxPQUFTLElBQ2pCZixFQUFRK0MsbUJBQXFCLElBRWhCLElBQUksSUFBUy9DLEdBS0osS0FBVyxJQUFRd0YsUUFBUyxJQUFRQSxPQ25CekMsV0FHYixNQUFNckgsRUFBVTJELFNBQVMyRCxlQUFlLFdBRWxDQyxFQUFTNUQsU0FBU1csY0FBYyxPQUN0Q2lELEVBQU9DLFlBQWMsb0JBQ3JCRCxFQUFPNUMsYUFBYSxLQUFNLFVBQzFCM0UsRUFBUW9FLFlBQVltRCxHQUNwQkEsRUFBT0UsVUFBVUMsSUFBSSxhQUVyQixNQUFNQyxFQUFnQmhFLFNBQVNXLGNBQWMsT0FDN0NxRCxFQUFjaEQsYUFBYSxLQUFNLGlCQUVqQ2dELEVBQWNuRSxNQUFNb0UsZ0JBQWtCLE9BQ3RDNUgsRUFBUW9FLFlBQVl1RCxHQUVwQixNQUFNRSxFQUFVbEUsU0FBU1csY0FBYyxPQUN2Q3VELEVBQVFsRCxhQUFhLEtBQU0sV0FDM0JrRCxFQUFRTCxZQUFjLHFCQUN0QkcsRUFBY3ZELFlBQVl5RCxHQUUxQixNQUFNQyxFQUFjbkUsU0FBU1csY0FBYyxPQUMzQ3dELEVBQVluRCxhQUFhLEtBQUssZUFDOUJrRCxFQUFRekQsWUFBWTBELEdBRXBCLE1BQU1DLEVBQWdCcEUsU0FBU1csY0FBYyxVQUM3Q3lELEVBQWNQLFlBQWMsa0JBQzVCTyxFQUFjcEQsYUFBYSxLQUFLLGlCQUNoQ21ELEVBQVkxRCxZQUFZMkQsR0FFeEIsTUFBTUMsRUFBY3JFLFNBQVNXLGNBQWMsT0FDM0MwRCxFQUFZckQsYUFBYSxLQUFNLGVBQy9CcUQsRUFBWVIsWUFBYywwQkFDMUJHLEVBQWN2RCxZQUFZNEQsR0FFMUIsTUFBTUMsRUFBV3RFLFNBQVNXLGNBQWMsVUFDeEMwRCxFQUFZNUQsWUFBWTZELEdBQ3hCQSxFQUFTVCxZQUFjLFFBQ3ZCUyxFQUFTQyxpQkFBaUIsU0FBUSxJQUFJQyxhQUFhQyxVSDdDL0IsV0FDcEIsTUFBTXBJLEVBQVUyRCxTQUFTMkQsZUFBZSxXQUNsQ2UsRUFBZTFFLFNBQVNXLGNBQWMsT0FDNUMrRCxFQUFhMUQsYUFBYSxLQUFLLGdCQUMvQjBELEVBQWFaLFVBQVVDLElBQUksZ0JBQzNCVyxFQUFhWixVQUFVQyxJQUFJLFVBQzNCMUgsRUFBUW9FLFlBQVlpRSxHQUVwQixNQUFNQyxFQUFjM0UsU0FBU1csY0FBYyxPQUMzQ2dFLEVBQVkzRCxhQUFhLEtBQUssZUFDOUIyRCxFQUFZZCxZQUFjLGtCQUMxQmEsRUFBYWpFLFlBQVlrRSxHQUV6QixNQUFNQyxFQUFzQjVFLFNBQVNXLGNBQWMsT0FDbkRpRSxFQUFvQjVELGFBQWEsS0FBSyx1QkFDdEMwRCxFQUFhakUsWUFBWW1FLEdBRXpCLE1BQU1DLEVBQWU3RSxTQUFTVyxjQUFjLFNBQzVDa0UsRUFBYTNCLEtBQU8sUUFDcEIyQixFQUFhN0QsYUFBYSxLQUFNLGdCQUNoQyxNQUFNOEQsRUFBb0I5RSxTQUFTVyxjQUFjLFNBQ2pEbUUsRUFBa0I5RCxhQUFhLE1BQU82RCxHQUN0Q0MsRUFBa0JDLFVBQVksVUFDOUJILEVBQW9CbkUsWUFBWXFFLEdBQ2hDRixFQUFvQm5FLFlBQVlvRSxHQUVoQyxNQUFNRyxFQUFZaEYsU0FBU1csY0FBYyxVQUN6Q3FFLEVBQVVoRSxhQUFhLEtBQUssYUFDNUJnRSxFQUFVbkIsWUFBYyxTQUN4QmUsRUFBb0JuRSxZQUFZdUUsR0FFaEMsTUFBTUMsRUFBU2pGLFNBQVNXLGNBQWMsVUFDdENzRSxFQUFPakUsYUFBYSxLQUFLLFVBQ3pCaUUsRUFBT3BCLFlBQWMsTUFDckJvQixFQUFPVixpQkFBaUIsU0FBUSxJQXVDWCxXQUNqQixJQUFJRyxFQUFlMUUsU0FBUzJELGVBQWUsZ0JBQ3ZDdUIsRUFBY2xGLFNBQVMyRCxlQUFlLGdCQUUxQyxHQUEyQyxVQUF4Q3dCLE1BQU1DLGNBQWNDLGFBQWEsTUFBZ0IsQ0FFaEQsR0FBNkMsTUFBekNiLGFBQWFjLFFBQVFKLEVBQVlLLE9BSXJDLFlBSEFDLE1BQU0sb0RBTUZoQixhQUFhaUIsUUFBUVAsRUFBWUssTUFBTyxJQUN4Q3RDLEVBQWVDLEtBQUtnQyxFQUFZSyxLQUV4QyxDQUNBYixFQUFhWixVQUFVQyxJQUFJLFVBQzNCMkIsZUFBZTVCLFVBQVUxRSxPQUFPLFNBR3BDLENBNURvQ3VHLEtBQ3BDZixFQUFvQm5FLFlBQVl3RSxFQUNwQyxDR2lEQVcsR0g5QzJCLFdBQ3ZCLE1BQU1sQixFQUFlMUUsU0FBUzJELGVBQWUsZ0JBQ3ZDUyxFQUFnQnBFLFNBQVMyRCxlQUFlLGlCQUN4Q3FCLEVBQVloRixTQUFTMkQsZUFBZSxhQUkxQ1MsRUFBY3lCLFFBQVUsV0FFcEJuQixFQUFhWixVQUFVMUUsT0FBTyxTQUNoQyxFQUdBNEYsRUFBVWEsUUFBVSxXQUVsQm5CLEVBQWFaLFVBQVVDLElBQUksU0FDN0IsRUFHQTdELE9BQU8yRixRQUFVLFNBQVNWLEdBQ3BCQSxFQUFNckYsUUFBVTRFLEdBRWhCQSxFQUFhWixVQUFVQyxJQUFJLFNBRS9CLENBQ0osQ0dzQkorQixHRjNDbUIsTUFDZixNQUFNekIsRUFBY3JFLFNBQVMyRCxlQUFlLGVBR3RDK0IsRUFBaUIxRixTQUFTVyxjQUFjLE9BQzlDK0UsRUFBZTFFLGFBQWEsS0FBTSxrQkFDbEMwRSxFQUFlNUIsVUFBVUMsSUFBSSxVQUU3QixNQUFNVixFQUFRckQsU0FBU1csY0FBYyxTQUNyQzBDLEVBQU1ILEtBQU8sUUFDYkcsRUFBTXJDLGFBQWEsS0FBTSxTQUN6QixNQUFNK0UsRUFBYS9GLFNBQVNXLGNBQWMsU0FDMUNvRixFQUFXL0UsYUFBYSxNQUFPcUMsR0FDL0IwQyxFQUFXaEIsVUFBWSxVQUN2QlcsRUFBZWpGLFlBQVlzRixHQUMzQkwsRUFBZWpGLFlBQVk0QyxHQUUzQixNQUFNMkMsRUFBT2hHLFNBQVNXLGNBQWMsWUFDcENxRixFQUFLOUMsS0FBTyxjQUNaOEMsRUFBS2hGLGFBQWEsS0FBTSxRQUN4QixNQUFNaUYsRUFBWWpHLFNBQVNXLGNBQWMsU0FDekNzRixFQUFVakYsYUFBYSxNQUFPZ0YsR0FDOUJDLEVBQVVsQixVQUFZLGdCQUN0QlcsRUFBZWpGLFlBQVl3RixHQUMzQlAsRUFBZWpGLFlBQVl1RixHQUUzQixNQUFNRSxFQUFNbEcsU0FBU1csY0FBYyxTQUNuQ3VGLEVBQUlDLEtBQU8sT0FDWEQsRUFBSWhELEtBQU8sTUFDWGdELEVBQUlsRixhQUFhLEtBQU0sT0FDdkIsTUFBTW9GLEVBQVdwRyxTQUFTVyxjQUFjLFNBQ3hDeUYsRUFBU3BGLGFBQWEsTUFBT2tGLEdBQzdCRSxFQUFTckIsVUFBWSxhQUNyQlcsRUFBZWpGLFlBQVkyRixHQUMzQlYsRUFBZWpGLFlBQVl5RixHQUUzQixNQUFNMUMsRUFBV3hELFNBQVNXLGNBQWMsVUFDeEM2QyxFQUFTTixLQUFPLFdBQ2hCTSxFQUFTeEMsYUFBYSxLQUFNLFlBQzVCLElBQUlxRixFQUFTLENBQUMsTUFBTyxTQUFVLE9BQVEsU0FDdkMsSUFBSyxNQUFNQyxLQUFPRCxFQUFRLENBQ3RCLElBQUlFLEVBQVN2RyxTQUFTVyxjQUFjLFVBQ3BDNEYsRUFBT2hCLE1BQVFlLEVBQ2ZDLEVBQU9DLEtBQU9GLEVBQUlHLE9BQU8sR0FBR0MsY0FBZ0JKLEVBQUlLLE1BQU0sR0FDdERuRCxFQUFTL0MsWUFBWThGLEVBQ3pCLENBQ0EsTUFBTUssRUFBZ0I1RyxTQUFTVyxjQUFjLFNBQzdDaUcsRUFBYzVGLGFBQWEsTUFBT3dDLEdBQ2xDb0QsRUFBYzdCLFVBQVksYUFDMUJXLEVBQWVqRixZQUFZbUcsR0FDM0JsQixFQUFlakYsWUFBWStDLEdBRTNCLE1BQU1DLEVBQVF6RCxTQUFTVyxjQUFjLFlBRXJDOEMsRUFBTVAsS0FBTyxRQUNiTyxFQUFNekMsYUFBYSxLQUFNLFNBQ3pCLE1BQU02RixFQUFhN0csU0FBU1csY0FBYyxTQUMxQ2tHLEVBQVc3RixhQUFhLE1BQU93QyxHQUMvQnFELEVBQVc5QixVQUFZLFVBQ3ZCVyxFQUFlakYsWUFBWW9HLEdBQzNCbkIsRUFBZWpGLFlBQVlnRCxHQUUzQixNQUFNcUQsRUFBWTlHLFNBQVNXLGNBQWMsVUFDekNtRyxFQUFVakQsWUFBYyxZQUN4QmlELEVBQVU5RixhQUFhLEtBQU0sWUFDN0IwRSxFQUFlakYsWUFBWXFHLEdBQzNCQSxFQUFVdkMsaUJBQWlCLFNBQVMsSUFPeEMsU0FBcUJ3QyxHQUNqQixJQUFJOUQsRUFBaUJFLElBQ3JCLEdBQXFDLE1BQWpDcUIsYUFBYWMsUUFBUXlCLEVBQUUxRCxPQUt2QixHQUEwQyxJQUF0Q21CLGFBQWFjLFFBQVFyQyxHQUFvQixDQUN6QyxJQUNJK0QsRUFBVSxDQUFDLENBRElELEVBQUUxRCxPQUNTMEQsR0FDOUJ2QyxhQUFhaUIsUUFBUXhDLEVBQWV4RixLQUFLQyxVQUFVc0osSUFDbkRDLFFBQVFDLElBQUkxQyxhQUNoQixLQUNJLENBQ0EsSUFBSTJDLEVBQVcxSixLQUFLMkosTUFBTTVDLGFBQWFjLFFBQVFyQyxJQUUzQytELEVBQVUsQ0FBQyxDQURJRCxFQUFFMUQsT0FDUzBELEdBQzlCSSxFQUFXM0UsT0FBTzZFLE9BQU9GLEVBQVNILEdBQ2xDeEMsYUFBYWlCLFFBQVF4QyxFQUFleEYsS0FBS0MsVUFBVXlKLEdBQ3ZELE1BaEJBM0IsTUFBTSxnREFtQmQsQ0E3QjhDOEIsQ0EzRm5DLElBQUlsRSxFQU5HcEQsU0FBUzJELGVBQWUsU0FBUzRCLE1BQ2xDdkYsU0FBUzJELGVBQWUsUUFBUTRCLE1BQ2pDdkYsU0FBUzJELGVBQWUsT0FBTzRCLE1BQzFCdkYsU0FBUzJELGVBQWUsWUFBWTRCLE1BQ3ZDdkYsU0FBUzJELGVBQWUsU0FBUzRCLFVBZ0cvQ2xCLEVBQVk1RCxZQUFZaUYsR0ExRkwsV0FDbkIsTUFBTUEsRUFBaUIxRixTQUFTMkQsZUFBZSxrQkFFL0MsSUFBSyxJQUFJakgsRUFBSSxFQUFHQSxFQUFJZ0osRUFBZTZCLFNBQVMvSyxPQUFRRSxJQUM1Q0EsRUFBSSxHQUFLLElBR0osR0FBTEEsSUFDQWdKLEVBQWU2QixTQUFTN0ssR0FBRzZJLE1BQVEsY0FHbkNHLEVBQWU2QixTQUFTN0ssR0FBRzZJLE1BRHRCLEdBQUw3SSxFQUNtQyxPQUdBLGFBSS9DLENBeUVJOEssRUFBZSxFRTFCbkJDLEVBRUEsQ0N0RUEsR0E0QklqRCxhQUFhaUIsUUFBUSxZQUFhaEksS0FBS0MsVUF2QnJCLENBQ2RnSyxRQUFTLENBQ0xyRSxNQUFPLGNBQ1BDLFlBQWEsa0JBQ2JxRSxLQUFNLGFBQ05uRSxTQUFVLE9BQ1ZDLE1BQU8sc0JBRVhtRSxRQUFTLENBQ0x2RSxNQUFPLGNBQ1BDLFlBQWEsa0JBQ2JxRSxLQUFNLGFBQ05uRSxTQUFVLE1BQ1ZDLE1BQU8sd0JBRVhvRSxLQUFNLENBQ0Z4RSxNQUFPLFlBQ1BDLFlBQWEsZ0JBQ2JxRSxLQUFNLGFBQ05uRSxTQUFVLE1BQ1ZDLE1BQU8sbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvMi8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kbzIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8yLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kbzIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kbzIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8yLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kbzIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvMi93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvMi93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvMi93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kbzIvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvMi93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kbzIvLi9zcmMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvMi8uL3NyYy90YXNrLmpzIiwid2VicGFjazovL3RvZG8yLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8yLy4vc3JjL3BhZ2VMb2FkLmpzIiwid2VicGFjazovL3RvZG8yLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGNvcmFsO1xufVxuXG4uaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4jdGFza0NvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuI2lucHV0Q29udGFpbmVyLmhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuI2lucHV0Q29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5wcm9qZWN0TW9kYWwge1xuICAgIC8qIGRpc3BsYXk6IG5vbmU7IEhpZGRlbiBieSBkZWZhdWx0ICovXG4gICAgcG9zaXRpb246IGZpeGVkOyAvKiBTdGF5IGluIHBsYWNlICovXG4gICAgei1pbmRleDogMTsgLyogU2l0IG9uIHRvcCAqL1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlOyAvKiBGdWxsIHdpZHRoICovXG4gICAgaGVpZ2h0OiAxMDAlOyAvKiBGdWxsIGhlaWdodCAqL1xuICAgIG92ZXJmbG93OiBhdXRvOyAvKiBFbmFibGUgc2Nyb2xsIGlmIG5lZWRlZCAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigwLDAsMCk7IC8qIEZhbGxiYWNrIGNvbG9yICovXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjQpOyAvKiBCbGFjayB3LyBvcGFjaXR5ICovXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLHFDQUFxQztJQUNyQyxlQUFlLEVBQUUsa0JBQWtCO0lBQ25DLFVBQVUsRUFBRSxlQUFlO0lBQzNCLE9BQU87SUFDUCxNQUFNO0lBQ04sV0FBVyxFQUFFLGVBQWU7SUFDNUIsWUFBWSxFQUFFLGdCQUFnQjtJQUM5QixjQUFjLEVBQUUsNEJBQTRCO0lBQzVDLDRCQUE0QixFQUFFLG1CQUFtQjtJQUNqRCxpQ0FBaUMsRUFBRSxxQkFBcUI7QUFDNURcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmNvbnRhaW5lciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Y29yYWw7XFxufVxcblxcbi5oaWRkZW4ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4jdGFza0NvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbiNpbnB1dENvbnRhaW5lci5oaWRkZW4ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4jaW5wdXRDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4ucHJvamVjdE1vZGFsIHtcXG4gICAgLyogZGlzcGxheTogbm9uZTsgSGlkZGVuIGJ5IGRlZmF1bHQgKi9cXG4gICAgcG9zaXRpb246IGZpeGVkOyAvKiBTdGF5IGluIHBsYWNlICovXFxuICAgIHotaW5kZXg6IDE7IC8qIFNpdCBvbiB0b3AgKi9cXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogMTAwJTsgLyogRnVsbCB3aWR0aCAqL1xcbiAgICBoZWlnaHQ6IDEwMCU7IC8qIEZ1bGwgaGVpZ2h0ICovXFxuICAgIG92ZXJmbG93OiBhdXRvOyAvKiBFbmFibGUgc2Nyb2xsIGlmIG5lZWRlZCAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBGYWxsYmFjayBjb2xvciAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNCk7IC8qIEJsYWNrIHcvIG9wYWNpdHkgKi9cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIi8vIFRoaXMgZnVuY3Rpb24gY3JlYXRlcyB0aGUgcHJvamVjdCBpbnB1dCBET00uIFRoaXMgaXMgRE9NIFN0dWZmIG9ubHlcbmNvbnN0IHByb2plY3RJbnB1dERPTSA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50JylcbiAgICBjb25zdCBwcm9qZWN0TW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIHByb2plY3RNb2RhbC5zZXRBdHRyaWJ1dGUoJ2lkJywncHJvamVjdE1vZGFsJylcbiAgICBwcm9qZWN0TW9kYWwuY2xhc3NMaXN0LmFkZCgncHJvamVjdE1vZGFsJylcbiAgICBwcm9qZWN0TW9kYWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHByb2plY3RNb2RhbClcblxuICAgIGNvbnN0IG1vZGFsSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBtb2RhbEhlYWRlci5zZXRBdHRyaWJ1dGUoJ2lkJywnbW9kYWxIZWFkZXInKVxuICAgIG1vZGFsSGVhZGVyLnRleHRDb250ZW50ID0gJ0FkZCBOZXcgUHJvamVjdCdcbiAgICBwcm9qZWN0TW9kYWwuYXBwZW5kQ2hpbGQobW9kYWxIZWFkZXIpXG5cbiAgICBjb25zdCBtb2RhbElucHV0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBtb2RhbElucHV0Q29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCdtb2RhbElucHV0Q29udGFpbmVyJylcbiAgICBwcm9qZWN0TW9kYWwuYXBwZW5kQ2hpbGQobW9kYWxJbnB1dENvbnRhaW5lcilcblxuICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBwcm9qZWN0VGl0bGUubmFtZSA9IFwiVGl0bGVcIjtcbiAgICBwcm9qZWN0VGl0bGUuc2V0QXR0cmlidXRlKCdpZCcsICdwcm9qZWN0VGl0bGUnKVxuICAgIGNvbnN0IHByb2plY3RUaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkxhYmVsXCIpO1xuICAgIHByb2plY3RUaXRsZUxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBwcm9qZWN0VGl0bGUpO1xuICAgIHByb2plY3RUaXRsZUxhYmVsLmlubmVySFRNTCA9IFwiVGl0bGU6IFwiO1xuICAgIG1vZGFsSW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdFRpdGxlTGFiZWwpO1xuICAgIG1vZGFsSW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdFRpdGxlKVxuXG4gICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICBjYW5jZWxCdG4uc2V0QXR0cmlidXRlKCdpZCcsJ2NhbmNlbEJ0bicpXG4gICAgY2FuY2VsQnRuLnRleHRDb250ZW50ID0gJ0NhbmNlbCdcbiAgICBtb2RhbElucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKGNhbmNlbEJ0bilcblxuICAgIGNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG4gICAgYWRkQnRuLnNldEF0dHJpYnV0ZSgnaWQnLCdhZGRCdG4nKVxuICAgIGFkZEJ0bi50ZXh0Q29udGVudCA9ICdBZGQnXG4gICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+c3RvcmVQcm9qZWN0KCkpXG4gICAgbW9kYWxJbnB1dENvbnRhaW5lci5hcHBlbmRDaGlsZChhZGRCdG4pXG59XG5cbi8vIHRoaXMgZnVuY3Rpb24gcmV2ZWFscyBvciBoaWRlcyB0aGUgcHJvamVjdCBpbnB1dHMgYnkgYWRkaW5nL3JlbW92aW5nIGhpZGRlbiBjbGFzcyAqKiogTkFNRSBDSEFOR0VEXG5jb25zdCBwcm9qZWN0SW5wdXRSZXZlYWwgPSBmdW5jdGlvbigpe1xuICAgIGNvbnN0IHByb2plY3RNb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0TW9kYWwnKVxuICAgIGNvbnN0IG5ld1Byb2plY3RCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmV3UHJvamVjdEJ0bicpXG4gICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbmNlbEJ0bicpXG4gICAgXG4gICAgXG4gICAgLy8gV2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIGJ1dHRvbiwgb3BlbiB0aGUgbW9kYWxcbiAgICBuZXdQcm9qZWN0QnRuLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gcHJvamVjdE1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIHByb2plY3RNb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBXaGVuIHRoZSB1c2VyIGNsaWNrcyBvbiA8c3Bhbj4gKHgpLCBjbG9zZSB0aGUgbW9kYWxcbiAgICAgIGNhbmNlbEJ0bi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIHByb2plY3RNb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIHByb2plY3RNb2RhbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBXaGVuIHRoZSB1c2VyIGNsaWNrcyBhbnl3aGVyZSBvdXRzaWRlIG9mIHRoZSBtb2RhbCwgY2xvc2UgaXRcbiAgICAgIHdpbmRvdy5vbmNsaWNrID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PSBwcm9qZWN0TW9kYWwpIHtcbiAgICAgICAgLy8gICBwcm9qZWN0TW9kYWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgcHJvamVjdE1vZGFsLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgY3VycmVudFByb2plY3QgPSB7XG4gICAgICAgIG5hbWU6JydcbiAgICB9XG5cbiAgICBjb25zdCByZXR1cm5DdXJyZW50UHJvamVjdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRQcm9qZWN0Lm5hbWVcbiAgICB9XG5cbiAgICBjb25zdCBzdG9yZVByb2plY3QgPSBmdW5jdGlvbigpe1xuICAgICAgICBsZXQgcHJvamVjdE1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3RNb2RhbCcpXG4gICAgICAgIGxldCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9qZWN0VGl0bGUnKVxuICAgIFxuICAgICAgICBpZihldmVudC5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZSgnaWQnKT09J2FkZEJ0bicpe1xuICAgIFxuICAgICAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKHByb2plY3ROYW1lLnZhbHVlKSE9bnVsbCl7XG4gICAgICAgICAgICBhbGVydChcIlRoaXMgUHJvamVjdCBBbHJlYWR5IEV4aXN0cy4gQ2hvb3NlIGFub3RoZXIgbmFtZVwiKVxuICAgICAgICAgICAgLy8gbGV0IHByb2plY3ROYW1lID0gXCJcIlxuXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0ocHJvamVjdE5hbWUudmFsdWUsICcnKVxuICAgICAgICAgICAgICAgIGN1cnJlbnRQcm9qZWN0Lm5hbWU9cHJvamVjdE5hbWUudmFsdWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwcm9qZWN0TW9kYWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcbiAgICAgICAgaW5wdXRDb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJylcbiAgICBcbiAgICAgICAgLy8gcmV0dXJuIGFjdGl2ZVByb2plY3RcbiAgICB9XG5cblxuXG5cblxuZXhwb3J0IHtcbiAgICBwcm9qZWN0SW5wdXRET00sXG4gICAgcHJvamVjdElucHV0UmV2ZWFsLFxuICAgIHN0b3JlUHJvamVjdCxcbiAgICByZXR1cm5DdXJyZW50UHJvamVjdCxcbn0iLCJpbXBvcnQgeyByZXR1cm5DdXJyZW50UHJvamVjdCB9IGZyb20gXCIuL3Byb2plY3QuanNcIlxuXG4vLyBjb25zdHJ1Y3RvciBmb3IgbmV3IHRvZG9cbmZ1bmN0aW9uIFRvZG8odGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgbm90ZXMpIHtcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgIHRoaXMubm90ZXMgPSBub3Rlcztcbn1cblxuLy8gcmVhZHMgaW5wdXRzIGFuZCByZXR1cm5zIG5ldyB0b2RvIHVzaW5nIHRoZSBjb25zdHJ1Y3RvciBhYm92ZVxuY29uc3QgY29sbGVjdElucHV0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aXRsZScpLnZhbHVlXG4gICAgY29uc3QgZGVzYyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZXNjJykudmFsdWVcbiAgICBjb25zdCBkdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHVlJykudmFsdWVcbiAgICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmlvcml0eScpLnZhbHVlXG4gICAgY29uc3Qgbm90ZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm90ZXMnKS52YWx1ZVxuXG4gICAgcmV0dXJuIG5ldyBUb2RvKHRpdGxlLCBkZXNjLCBkdWUsIHByaW9yaXR5LCBub3Rlcylcbn1cblxuLy8gdGhpcyBpcyBhIHRlc3QgZnVuY3Rpb24gdG8gZ2l2ZSB0aGUgaW5wdXRzIHZhbHVlcyBhbmQgc2VlIGlmIHRoZXkgYXJlIHJlYWQgY29ycmVjdGx5IGJ5IG90aGVyIGZ1bmN0aW9uc1xuY29uc3QgdGVzdElucHV0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgaW5wdXRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5wdXRDb250YWluZXInKVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dENvbnRhaW5lci5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaSAlIDIgPT0gMCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgICBpZiAoaSA9PSA1KSB7XG4gICAgICAgICAgICBpbnB1dENvbnRhaW5lci5jaGlsZHJlbltpXS52YWx1ZSA9IFwiMjAwMS0wMS0wMVwiXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGkgPT0gNykge1xuICAgICAgICAgICAgaW5wdXRDb250YWluZXIuY2hpbGRyZW5baV0udmFsdWUgPSBcIkhpZ2hcIlxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaW5wdXRDb250YWluZXIuY2hpbGRyZW5baV0udmFsdWUgPSAndGVzdCBWYWx1ZSdcbiAgICAgICAgfVxuXG4gICAgfVxufVxuXG4vLyB0aGlzIGNyZWF0ZXMgdGhlIHRhc2sgaW5wdXQgZG9tc1xuY29uc3QgdGFza0lucHV0cyA9ICgpID0+IHtcbiAgICBjb25zdCB0YXNrRGlzcGxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrRGlzcGxheScpXG5cblxuICAgIGNvbnN0IGlucHV0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBpbnB1dENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2lucHV0Q29udGFpbmVyJylcbiAgICBpbnB1dENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKVxuXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgdGl0bGUubmFtZSA9IFwiVGl0bGVcIjtcbiAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3RpdGxlJylcbiAgICBjb25zdCB0aXRsZWxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkxhYmVsXCIpO1xuICAgIHRpdGxlbGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIHRpdGxlKTtcbiAgICB0aXRsZWxhYmVsLmlubmVySFRNTCA9IFwiVGl0bGU6IFwiO1xuICAgIGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlbGFiZWwpO1xuICAgIGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlKVxuXG4gICAgY29uc3QgZGVzYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcbiAgICBkZXNjLm5hbWUgPSBcIkRlc2NyaXB0aW9uXCJcbiAgICBkZXNjLnNldEF0dHJpYnV0ZSgnaWQnLCAnZGVzYycpXG4gICAgY29uc3QgZGVzY2xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkxhYmVsXCIpO1xuICAgIGRlc2NsYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgZGVzYyk7XG4gICAgZGVzY2xhYmVsLmlubmVySFRNTCA9IFwiRGVzY3JpcHRpb246IFwiO1xuICAgIGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKGRlc2NsYWJlbCk7XG4gICAgaW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQoZGVzYylcblxuICAgIGNvbnN0IGR1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBkdWUudHlwZSA9ICdkYXRlJ1xuICAgIGR1ZS5uYW1lID0gXCJEdWVcIlxuICAgIGR1ZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2R1ZScpXG4gICAgY29uc3QgZHVlbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiTGFiZWxcIik7XG4gICAgZHVlbGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIGR1ZSk7XG4gICAgZHVlbGFiZWwuaW5uZXJIVE1MID0gXCJEdWUgRGF0ZTogXCI7XG4gICAgaW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQoZHVlbGFiZWwpO1xuICAgIGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKGR1ZSlcblxuICAgIGNvbnN0IHByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgICBwcmlvcml0eS5uYW1lID0gXCJQcmlvcml0eVwiXG4gICAgcHJpb3JpdHkuc2V0QXR0cmlidXRlKCdpZCcsICdwcmlvcml0eScpXG4gICAgbGV0IHZhbHVlcyA9IFsnTG93JywgJ01lZGl1bScsICdIaWdoJywgJ1VnZW50J11cbiAgICBmb3IgKGNvbnN0IHZhbCBvZiB2YWx1ZXMpIHtcbiAgICAgICAgdmFyIG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgICAgIG9wdGlvbi52YWx1ZSA9IHZhbDtcbiAgICAgICAgb3B0aW9uLnRleHQgPSB2YWwuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB2YWwuc2xpY2UoMSk7XG4gICAgICAgIHByaW9yaXR5LmFwcGVuZENoaWxkKG9wdGlvbik7XG4gICAgfVxuICAgIGNvbnN0IHByaW9yaXR5bGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiTGFiZWxcIik7XG4gICAgcHJpb3JpdHlsYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgcHJpb3JpdHkpO1xuICAgIHByaW9yaXR5bGFiZWwuaW5uZXJIVE1MID0gXCJQcmlvcml0eTogXCI7XG4gICAgaW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJpb3JpdHlsYWJlbCk7XG4gICAgaW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJpb3JpdHkpXG5cbiAgICBjb25zdCBub3RlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcblxuICAgIG5vdGVzLm5hbWUgPSBcIk5vdGVzXCJcbiAgICBub3Rlcy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ25vdGVzJylcbiAgICBjb25zdCBub3Rlc2xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkxhYmVsXCIpO1xuICAgIG5vdGVzbGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIHByaW9yaXR5KTtcbiAgICBub3Rlc2xhYmVsLmlubmVySFRNTCA9IFwiTm90ZXM6IFwiO1xuICAgIGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKG5vdGVzbGFiZWwpO1xuICAgIGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKG5vdGVzKVxuXG4gICAgY29uc3Qgc3VibWl0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICBzdWJtaXRCdG4udGV4dENvbnRlbnQgPSBcIkFkZCBUby1Eb1wiXG4gICAgc3VibWl0QnRuLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJpbnRCdG4nKVxuICAgIGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKHN1Ym1pdEJ0bilcbiAgICBzdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0YXNrU3RvcmFnZShjb2xsZWN0SW5wdXRzKCkpKVxuXG5cbiAgICB0YXNrRGlzcGxheS5hcHBlbmRDaGlsZChpbnB1dENvbnRhaW5lcilcbiAgICB0ZXN0SW5wdXRWYWx1ZSgpXG59XG5cbmZ1bmN0aW9uIHRhc2tTdG9yYWdlKHgpIHtcbiAgICBsZXQgY3VycmVudFByb2plY3QgPSByZXR1cm5DdXJyZW50UHJvamVjdCgpXG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKHgudGl0bGUpICE9IG51bGwpIHtcbiAgICAgICAgYWxlcnQoXCJUaGlzIFRhc2sgQWxyZWFkeSBFeGlzdHMuIENob29zZSBhbm90aGVyIG5hbWVcIilcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oY3VycmVudFByb2plY3QpPT0nJyl7XG4gICAgICAgICAgICBsZXQgbmV3VGFza1RpdGxlID0geC50aXRsZVxuICAgICAgICAgICAgbGV0IG5ld1Rhc2sgPSB7W25ld1Rhc2tUaXRsZV06eH1cbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGN1cnJlbnRQcm9qZWN0LEpTT04uc3RyaW5naWZ5KG5ld1Rhc2spKVxuICAgICAgICAgICAgY29uc29sZS5sb2cobG9jYWxTdG9yYWdlKVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBsZXQgYWxsVGFza3MgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGN1cnJlbnRQcm9qZWN0KSlcbiAgICAgICAgICAgIGxldCBuZXdUYXNrVGl0bGUgPSB4LnRpdGxlXG4gICAgICAgICAgICBsZXQgbmV3VGFzayA9IHtbbmV3VGFza1RpdGxlXTp4fVxuICAgICAgICAgICAgYWxsVGFza3MgPSBPYmplY3QuYXNzaWduKGFsbFRhc2tzLG5ld1Rhc2spXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShjdXJyZW50UHJvamVjdCxKU09OLnN0cmluZ2lmeShhbGxUYXNrcykpXG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuZXhwb3J0IHtcbiAgICB0YXNrSW5wdXRzLFxufSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7dGFza0lucHV0c30gZnJvbSBcIi4vdGFzay5qc1wiXG5pbXBvcnQge3Byb2plY3RJbnB1dERPTSwgcHJvamVjdElucHV0UmV2ZWFsfSBmcm9tIFwiLi9wcm9qZWN0LmpzXCJcblxuLy8gaW1wb3J0IHRhc2tJbnB1dHMgZnJvbSBcIi4vdGFza0lucHV0c1wiXG4vLyBpbXBvcnQgcHJvamVjdElucHV0IGZyb20gXCIuL3Byb2plY3RJbnB1dFwiXG4vLyBpbXBvcnQgbmV3UHJvamVjdCBmcm9tIFwiLi9uZXdQcm9qZWN0XCJcblxuY29uc3QgcGFnZUxvYWQgPSBmdW5jdGlvbigpe1xuLy8gcmVtb3ZlIHRoaXMgbGluZSB3aGVuIG5vdCB0ZXN0aW5nXG4gICAgXG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50JylcblxuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgaGVhZGVyLnRleHRDb250ZW50ID0gJ1RoaXMgaXMgbXkgaGVhZGVyJ1xuICAgIGhlYWRlci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2hlYWRlcicpXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChoZWFkZXIpXG4gICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRhaW5lcicpXG5cbiAgICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICB0YXNrQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAndGFza0NvbnRhaW5lcicpXG4gICAgLy8gdGFza0NvbnRhaW5lci50ZXh0Q29udGVudCA9ICdUaGlzIGlzIG15IHRhc2sgY29udGFpbmVyJ1xuICAgIHRhc2tDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ2dyZXknXG4gICAgY29udGVudC5hcHBlbmRDaGlsZCh0YXNrQ29udGFpbmVyKVxuXG4gICAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgc2lkZWJhci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3NpZGViYXInKVxuICAgIHNpZGViYXIudGV4dENvbnRlbnQgPSAnVGhpcyBpcyBteSBzaWRlYmFyJ1xuICAgIHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoc2lkZWJhcilcblxuICAgIGNvbnN0IHByb2plY3RNZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBwcm9qZWN0TWVudS5zZXRBdHRyaWJ1dGUoJ2lkJywncHJvamVjdE1lbnUnKVxuICAgIHNpZGViYXIuYXBwZW5kQ2hpbGQocHJvamVjdE1lbnUpXG5cbiAgICBjb25zdCBuZXdQcm9qZWN0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICBuZXdQcm9qZWN0QnRuLnRleHRDb250ZW50ID0gXCJBZGQgTmV3IFByb2plY3RcIlxuICAgIG5ld1Byb2plY3RCdG4uc2V0QXR0cmlidXRlKCdpZCcsJ25ld1Byb2plY3RCdG4nKVxuICAgIHByb2plY3RNZW51LmFwcGVuZENoaWxkKG5ld1Byb2plY3RCdG4pXG5cbiAgICBjb25zdCB0YXNrRGlzcGxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgdGFza0Rpc3BsYXkuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrRGlzcGxheScpXG4gICAgdGFza0Rpc3BsYXkudGV4dENvbnRlbnQgPSAnVGhpcyBpcyBteSB0YXNrIGRpc3BsYXknXG4gICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrRGlzcGxheSlcblxuICAgIGNvbnN0IGNsZWFyQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICB0YXNrRGlzcGxheS5hcHBlbmRDaGlsZChjbGVhckJ0bilcbiAgICBjbGVhckJ0bi50ZXh0Q29udGVudCA9ICdDTEVBUidcbiAgICBjbGVhckJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PmxvY2FsU3RvcmFnZS5jbGVhcigpKVxuICAgIC8vIFRoaXMgaXMgRE9NIFN0dWZmIG9ubHlcbi8vIGNvbnN0IHByb2plY3RJbnB1dERPTSA9IGZ1bmN0aW9uKCl7XG4vLyAgICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50Jylcbi8vICAgICBjb25zdCBwcm9qZWN0TW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuLy8gICAgIHByb2plY3RNb2RhbC5zZXRBdHRyaWJ1dGUoJ2lkJywncHJvamVjdE1vZGFsJylcbi8vICAgICBwcm9qZWN0TW9kYWwuY2xhc3NMaXN0LmFkZCgncHJvamVjdE1vZGFsJylcbi8vICAgICBwcm9qZWN0TW9kYWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcbi8vICAgICBjb250ZW50LmFwcGVuZENoaWxkKHByb2plY3RNb2RhbClcblxuLy8gICAgIGNvbnN0IG1vZGFsSGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcbi8vICAgICBtb2RhbEhlYWRlci5zZXRBdHRyaWJ1dGUoJ2lkJywnbW9kYWxIZWFkZXInKVxuLy8gICAgIG1vZGFsSGVhZGVyLnRleHRDb250ZW50ID0gJ0FkZCBOZXcgUHJvamVjdCdcbi8vICAgICBwcm9qZWN0TW9kYWwuYXBwZW5kQ2hpbGQobW9kYWxIZWFkZXIpXG5cbi8vICAgICBjb25zdCBtb2RhbElucHV0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcbi8vICAgICBtb2RhbElucHV0Q29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCdtb2RhbElucHV0Q29udGFpbmVyJylcbi8vICAgICBwcm9qZWN0TW9kYWwuYXBwZW5kQ2hpbGQobW9kYWxJbnB1dENvbnRhaW5lcilcblxuLy8gICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbi8vICAgICBwcm9qZWN0VGl0bGUubmFtZSA9IFwiVGl0bGVcIjtcbi8vICAgICBwcm9qZWN0VGl0bGUuc2V0QXR0cmlidXRlKCdpZCcsICdwcm9qZWN0VGl0bGUnKVxuLy8gICAgIGNvbnN0IHByb2plY3RUaXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkxhYmVsXCIpO1xuLy8gICAgIHByb2plY3RUaXRsZUxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBwcm9qZWN0VGl0bGUpO1xuLy8gICAgIHByb2plY3RUaXRsZUxhYmVsLmlubmVySFRNTCA9IFwiVGl0bGU6IFwiO1xuLy8gICAgIG1vZGFsSW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdFRpdGxlTGFiZWwpO1xuLy8gICAgIG1vZGFsSW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdFRpdGxlKVxuXG4vLyAgICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbi8vICAgICBjYW5jZWxCdG4uc2V0QXR0cmlidXRlKCdpZCcsJ2NhbmNlbEJ0bicpXG4vLyAgICAgY2FuY2VsQnRuLnRleHRDb250ZW50ID0gJ0NhbmNlbCdcbi8vICAgICBtb2RhbElucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKGNhbmNlbEJ0bilcblxuLy8gICAgIGNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG4vLyAgICAgYWRkQnRuLnNldEF0dHJpYnV0ZSgnaWQnLCdhZGRCdG4nKVxuLy8gICAgIGFkZEJ0bi50ZXh0Q29udGVudCA9ICdBZGQnXG4vLyAgICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+bmV3UHJvamVjdCgpKVxuLy8gICAgIG1vZGFsSW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQoYWRkQnRuKVxuLy8gfVxuXG5wcm9qZWN0SW5wdXRET00oKVxucHJvamVjdElucHV0UmV2ZWFsKClcbnRhc2tJbnB1dHMoKVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhZ2VMb2FkXG4iLCJpbXBvcnQgcGFnZUxvYWQgZnJvbSBcIi4vcGFnZUxvYWRcIlxuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgY29sbGVjdElucHV0cyBmcm9tIFwiLi9uZXdUb0RvXCJcbmltcG9ydCB0YXNrU3RvcmFnZSBmcm9tIFwiLi9zdG9yYWdlLmpzXCJcbmltcG9ydCB0YXNrSW5wdXRzIGZyb20gXCIuL3Rhc2tJbnB1dHNcIlxuXG4vLyBpbXBvcnQgcmVhZEFuZFN0b3JlIGZyb20gXCIuL3N0b3JhZ2VcIlxuXG4vLyBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKVxuLy8gY29uc3QgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbi8vIGJ0bi50ZXh0Q29udGVudCA9ICdidXR0b24nXG4vLyBjb250ZW50LmFwcGVuZENoaWxkKGJ0bilcblxuLy8gYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyxmdW5jdGlvbigpe1xuLy8gICAgIHRhc2tTdG9yYWdlKGNvbGxlY3RJbnB1dHMoKSlcbi8vIH0pXG5cblxuLy8gLy8gY3JlYXRlcyB0aGUgZG9tIGlucHV0cyAtIGFsbCBET00gcmVsYXRlZCBubyBsb2dpY1xuLy8gdGFza0lucHV0cygpXG5wYWdlTG9hZCgpXG5cbi8vIHRlc3QgYWRkIHRvIGxvY2FsIHN0b3JhZ2VcblxuY29uc3QgZGVmYXVsdFRhc2tzID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGhvdXNld29yayA9IHtcbiAgICAgICAgd2FzaGluZzoge1xuICAgICAgICAgICAgdGl0bGU6ICd3YXNoIGRpc2hlcycsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ3dhc2ggdGhlIGRpc2hlcycsXG4gICAgICAgICAgICBkYXRlOiAnMjAyMy0wMS0wMScsXG4gICAgICAgICAgICBwcmlvcml0eTogJ2hpZ2gnLFxuICAgICAgICAgICAgbm90ZXM6ICd0aGVyZSBhcmUgbm8gbm90ZXMnXG4gICAgICAgIH0sXG4gICAgICAgIGNvb2tpbmc6IHtcbiAgICAgICAgICAgIHRpdGxlOiAnY29vayBkaW5uZXInLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdjb29rIHRoZSBkaW5uZXInLFxuICAgICAgICAgICAgZGF0ZTogJzIwMjMtMDItMDEnLFxuICAgICAgICAgICAgcHJpb3JpdHk6ICdsb3cnLFxuICAgICAgICAgICAgbm90ZXM6ICd0aGVyZSBhcmUgc29tZSBub3RlcydcbiAgICAgICAgfSxcbiAgICAgICAgeWFyZDoge1xuICAgICAgICAgICAgdGl0bGU6ICdjdXQgZ3Jhc3MnLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdjdXQgdGhlIGdyYXNzJyxcbiAgICAgICAgICAgIGRhdGU6ICcyMDIzLTAyLTAxJyxcbiAgICAgICAgICAgIHByaW9yaXR5OiAnbWVkJyxcbiAgICAgICAgICAgIG5vdGVzOiAndGhlcmUgYXJlIHNvIG1hbnkgbm90ZXMgbm90ZXMnXG4gICAgICAgIH0sXG4gICAgfVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdob3VzZXdvcmsnLCBKU09OLnN0cmluZ2lmeShob3VzZXdvcmspKVxufVxuXG5kZWZhdWx0VGFza3MoKVxuXG5cblxuXG5cblxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImN1cnJlbnRQcm9qZWN0IiwibmFtZSIsInJldHVybkN1cnJlbnRQcm9qZWN0IiwiVG9kbyIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJub3RlcyIsImxvY2FscyIsImdldEVsZW1lbnRCeUlkIiwiaGVhZGVyIiwidGV4dENvbnRlbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0YXNrQ29udGFpbmVyIiwiYmFja2dyb3VuZENvbG9yIiwic2lkZWJhciIsInByb2plY3RNZW51IiwibmV3UHJvamVjdEJ0biIsInRhc2tEaXNwbGF5IiwiY2xlYXJCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwibG9jYWxTdG9yYWdlIiwiY2xlYXIiLCJwcm9qZWN0TW9kYWwiLCJtb2RhbEhlYWRlciIsIm1vZGFsSW5wdXRDb250YWluZXIiLCJwcm9qZWN0VGl0bGUiLCJwcm9qZWN0VGl0bGVMYWJlbCIsImlubmVySFRNTCIsImNhbmNlbEJ0biIsImFkZEJ0biIsInByb2plY3ROYW1lIiwiZXZlbnQiLCJjdXJyZW50VGFyZ2V0IiwiZ2V0QXR0cmlidXRlIiwiZ2V0SXRlbSIsInZhbHVlIiwiYWxlcnQiLCJzZXRJdGVtIiwiaW5wdXRDb250YWluZXIiLCJzdG9yZVByb2plY3QiLCJwcm9qZWN0SW5wdXRET00iLCJvbmNsaWNrIiwicHJvamVjdElucHV0UmV2ZWFsIiwidGl0bGVsYWJlbCIsImRlc2MiLCJkZXNjbGFiZWwiLCJkdWUiLCJ0eXBlIiwiZHVlbGFiZWwiLCJ2YWx1ZXMiLCJ2YWwiLCJvcHRpb24iLCJ0ZXh0IiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzbGljZSIsInByaW9yaXR5bGFiZWwiLCJub3Rlc2xhYmVsIiwic3VibWl0QnRuIiwieCIsIm5ld1Rhc2siLCJjb25zb2xlIiwibG9nIiwiYWxsVGFza3MiLCJwYXJzZSIsImFzc2lnbiIsInRhc2tTdG9yYWdlIiwiY2hpbGRyZW4iLCJ0ZXN0SW5wdXRWYWx1ZSIsInRhc2tJbnB1dHMiLCJ3YXNoaW5nIiwiZGF0ZSIsImNvb2tpbmciLCJ5YXJkIl0sInNvdXJjZVJvb3QiOiIifQ==